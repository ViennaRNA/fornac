{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"d3\"","webpack://[name]/./src/fornac.css","webpack://[name]/./node_modules/slugid/index.js","webpack://[name]/./src/naview/connection.js","webpack://[name]/./src/naview/loop.js","webpack://[name]/./src/naview/region.js","webpack://[name]/(webpack)/buildin/global.js","webpack://[name]/./src/img/play.svg","webpack://[name]/./node_modules/slugid/slugid.js","webpack://[name]/./node_modules/buffer/index.js","webpack://[name]/./node_modules/base64-js/index.js","webpack://[name]/./node_modules/ieee754/index.js","webpack://[name]/./node_modules/isarray/index.js","webpack://[name]/./node_modules/uuid/uuid.js","webpack://[name]/./node_modules/uuid/rng-browser.js","webpack://[name]/./src/d3-context-menu.js","webpack://[name]/./src/rnautils.js","webpack://[name]/./src/rnagraph.js","webpack://[name]/./src/simplernaplot.js","webpack://[name]/./src/naview/radloop.js","webpack://[name]/./src/naview/base.js","webpack://[name]/./src/naview/naview.js","webpack://[name]/./src/fornac.js","webpack://[name]/./src/rnaplot.js","webpack://[name]/./src/rnatreemap.js","webpack://[name]/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","nodeStrokeWidth","directionArrowSize","directionArrowWidth","node","directionArrow","plot","selectedNode","nodeLabel","link","plotLabel","transparent","dragLine","mouseEventHelper","__webpack_exports__","Connection","_loop_js__WEBPACK_IMPORTED_MODULE_0__","_region_js__WEBPACK_IMPORTED_MODULE_1__","this","loop","Loop","region","Region","start","end","xrad","yrad","angle","extruded","broken","_isNull","isNull","setNull","getLoop","setLoop","getRegion","setRegion","getStart","setStart","getEnd","setEnd","getXrad","setXrad","getYrad","setYrad","getAngle","setAngle","isExtruded","setExtruded","isBroken","setBroken","_connection_js__WEBPACK_IMPORTED_MODULE_0__","nconnection","connections","_connections","number","depth","mark","x","y","radius","getNconnection","setNconnection","setConnection","getConnection","addConnection","push","getNumber","setNumber","getDepth","setDepth","isMark","setMark","getX","setX","getY","setY","getRadius","setRadius","_start1","_end1","_start2","_end2","getStart1","setStart1","start1","getEnd1","setEnd1","end1","getStart2","setStart2","start2","getEnd2","setEnd2","end2","g","Function","e","Buffer","uuid","encode","uuid_","bytes","parse","toString","replace","substring","decode","slug","base64","unparse","v4","nice","global","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","_rng","_byteToHex","_hexToByte","bth","_seedBytes","_nodeId","_clockseq","_lastMSecs","_lastNSecs","options","rnds","random","rng","ii","v1","clockseq","msecs","Date","getTime","nsecs","dt","tl","tmh","oct","crypto","msCrypto","getRandomValues","_rnds8","_rnds","contextMenu","menu","opts","openCallback","closeCallback","previouslyMouseUp","uid","slugid","rootElement","orientation","initialPos","parentStart","onOpen","onClose","d3","selectAll","enter","append","classed","select","on","console","style","index","pMouseUp","clickAwayFunc","elm","mousePos","currentThis","mouse","openChildMenuUid","html","event","preventDefault","stopPropagation","attr","divider","disabled","action","title","error","children","childUid","boundingRect","getBoundingClientRect","childrenContextMenu","left","pageXOffset","top","pageYOffset","width","ArrowIcon","contextMenuSelection","pageX","pageY","innerWidth","numberSort","RNAUtilities","self","bracketLeft","split","bracketRight","inverseBrackets","bracket","maximumMatching","pt","mm","maximum","backtrackMaximumMatching","oldPt","map","mmBt","q","dotbracketToPairtable","dotbracket","valueOf","stack","inverseBracketLeft","inverseBracketRight","ni","pop","insertIntoStack","k","deleteFromStack","pairtableToDotbracket","seen","findUnmatched","to","toRemove","unmatched","origFrom","origTo","removePseudoknotsFromPairtable","newPt","removed","ptToElements","level","dotBracketBreaks","elements","u5","u3","sort","external","right","rnaUtilities","ColorScheme","colorsText","parseRange","rangeText","nums","parts1","parseColorText","colorText","lines","currMolecule","counter","colorsJson","colorValues","","range","domainValues","words","search","partsRight","domain","color","normalizeColors","moleculeName","minNum","MAX_VALUE","maxNum","MIN_VALUE","resnum","RNAGraph","seq","structName","startNumber","circularizeExternal","circular","pseudoknotPairs","nucsToNodes","addUids","uids","nucleotideNodes","nodes","filter","nodeType","computePairtable","pairtable","removeBreaks","targetString","breaks","breakIndex","seqBreaks","rnaLength","arraysEqual","addPositions","positions","labelNodes","breakNodesToFakeNodes","_loop","elemType","getPositions","getUids","reinforceStems","relevantElements","allNucs","nucs","addFakeNode","reinforceLoops","filterNucs","newNode1","rna","px","py","newNode2","updateLinkUids","links","source","tan","fakeNodeUid","newNode","newX","newY","coordsCounted","cos","linkType","ia","fromNode","connectFakeNodes","fakeNodes","linked","thisNode","thisNuc","JSON","stringify","distance","addExtraLinks","extraLinks","newLink","getNodeFromNucleotides","extraLinkType","elementsToJson","elemTypes","nodeName","prevNode","nextNode","addLabels","labelInterval","prevVec","nextVec","combinedVec","vecLength","sqrt","normedVec","offsetVec","recalculateElements","removePseudoknots","externalLoop","eloop","prev","hloop","numGreater","reassignLinkUids","addPseudoknots","addName","simpleXyCoordinates","pair_table","alpha","loop_size","stack_size","lp","stk","PIHALF","PI","i_old","partner","start_k","start_l","ladder","begin","v","diff","polygon","count","bubble","remember","poss","sin","Radloop","loopnumber","next","getLoopnumber","setLoopnumber","getNext","setNext","getPrev","setPrev","Base","mate","extracted","getMate","setMate","isExtracted","setExtracted","NAView","ANUM","MAXITER","bases","nbase","nregion","loop_count","loops","regions","rlphead","lencut","RADIUS_REDUCTION_FACTOR","angleinc","_h","HELIX_FACTOR","BACKBONE_DISTANCE","FornaContainer","element","passedOptions","assign","editable","zoomable","animation","displayAllLinks","chargeDistance","friction","middleCharge","otherCharge","linkDistanceMultiplier","initialSize","layout","transitionDuration","maxNodeRadius","svgW","svgH","linkStrengths","pseudoknot","proteinChain","chainChain","intermolecule","other","displayParameters","displayNumbering","displayNodeOutline","displayNodeLabel","displayLinks","displayPseudoknotLinks","displayProteinLinks","displayDirectionArrows","colorScheme","customColors","rnas","mousedownNode","mouseupNode","linkContextMenuShown","resetMouseVars","graph","shiftKeydown","ctrlKeydown","keyCode","getStructuresDotBracket","centerView","disableZooming","enableBrushing","enableZooming","disableBrushing","backgroundMenu","canvasMousePos","xScale","invert","yScale","addRNA","sequence","centerPos","nodeMenu","deleteNode","changeNode","insertNodeBeforeOrAfter","nodeContextMenu","backgroundContextMenu","remove","svg","each","focus","mpos","vis","fstyle","deselectAllNodes","visLinks","visNodes","scale","linear","zoomer","behavior","zoom","scaleExtent","translate","toggleSelectNode","selected","selectedNodes","brusher","brush","extent","clear","force","charge","linkDistance","linkStrength","gravity","drag","sourceEvent","d1","fixed","dx","dy","resumeForce","createInitialLayout","structure","avoidOthers","rg","rnaJson","naViewPositions","naview_xy_coordinates","createNewNodes","gnodesEnter","previouslySelected","transition","duration","ease","nodeMousedown","nodeMouseup","labelAndProteinNodes","text","createNewLinks","linksEnter","linkLines","linkClick","drawDirectionArrow","magnitude","endPoint","startPoint","nodeStroke","parseFloat","lengthMult","arrowWidth","u","arrowTip","path","realLinkFilter","recalculateGraph","uidsToNodes","forEach","fakeLinks","linkIndex","splice","update","allLinks","elementKey","exit","gnodes","realNodes","geom","quadtree","collide","nx1","nx2","ny1","ny2","quad","x1","y1","x2","y2","point","visit","changeColorScheme","updateStyle","transitionRNA","newStructure","nextFunction","newRNAJson","newNodes","callback","setTimeout","bbTransform","minX","minY","maxX","maxY","maxRadius","molWidth","molHeight","widthRatio","heightRatio","minRatio","newMolWidth","newMolHeight","getBoundingBoxTransform","setSize","offsetWidth","offsetHeight","setOutlineColor","addCustomColors","json","addCustomColorsText","customColorsText","cs","newColorScheme","ordinal","category10","interpolate","interpolateLab","changeColors","moleculeColors","referenceNode","newNodeNum","newDotbracket","newSequence","newPositions","positionOffset","newUids","pair","updateRnaGraph","nucleotidePositions","labelPositions","removeLink","sequence1","sequence2","rnaDotBracket","dotBracket1","dotBracket2","positions1","positions2","uids1","uids2","rna1","rna2","removeBackBoneLink","extraLinkIndex","basepairPossible","linkMenu","dotbracket1","dotbracket2","seq1","seq2","newSeq","toAddExternal","toDelete","newRna","addBackBoneLink","addLink","linkContextMenu","selectNode","fake","fake_fake","label_link","fromJSON","jsonString","err","ProteinGraph","addRNAJSON","newLinks","addExternalLinks","rnaGraph","_ref","_ref$avoidOthers","_ref$centerPos","_ref$centerView","totalX","totalY","nodeCount","addNodes","entry","clearNodes","externalLinks","currIdx","nodeIdxs","idx1","idx2","startAnimation","stopAnimation","stop","resume","setFriction","setCharge","setGravity","setPseudoknotStrength","rnaPlot","height","nucleotideRadius","rnaEdgePadding","showNucleotideLabels","startNucleotideNumber","bundleExternalLinks","rnaLayout","namePosition","chart","selection","fillViewportTransform","xValues","yValues","xExtent","yExtent","xRange","yRange","createOtherScale","firstScale","newDomain","newRange","scaleFactor","newWidth","newMargin","createTransformToFillViewport","createLinks","gs","struct_name","createNucleotides","createLabels","nameLabel","xyPos","xy","textBBox","getBBox","textSize","plotSize","createName","nodesDict","linksList","results","ForceEdgeBundling","edges","compatibility_threshold","step_size","fbundling","d3line","line","edge_subpoint_data","makeExternalLinksBundle","_","rnaTreemap","rnaTreemapNode","treemap","sticky","datum","read_in_bases","find_regions","construct_loop","find_central_loop","traverse_loop","npairs","nb1","ibase","retloop","cp","rp","rlp","maxconn","maxdepth","determine_depths","anchor_connection","xs","ys","xe","xn","yn","xc","yc","xo","yo","astart","aend","cpnext","acp","cpprev","ic","da","maxang","icstart","icend","icmiddle","icroot","done","done_all_connections","rooted","sign","midx","midy","nrx","nry","mx","my","vx","vy","dotmv","nmidx","nmidy","icstart1","icup","icdown","icnext","direction","dan","rr","cpx","cpy","cpnextx","cpnexty","cnx","rcn","rc","lnx","lny","rl","ac","acn","sx","sy","dcp","imaxloop","indice","atan2","set_radius","determine_radius","connected_connection","find_ic_middle","asin","construct_extruded_segment","generate_region","mindit","ci","sumn","sumd","dit","imindit","aend1","aend2","aave","a1","a2","dac","nstart","nend","collision","construct_circle_segment","minf2","maxf2","find_center_for_arc","h","hhi","hlow","disc","theta","iter","acos","noIterationFailureYet"],"mappings":"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","file":"fornac.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fornac\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"fornac\"] = factory(root[\"d3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","// extracted by extract-css-chunks-webpack-plugin\nmodule.exports = {\"nodeStrokeWidth\":\"0.8\",\"directionArrowSize\":\"6\",\"directionArrowWidth\":\"0.7\",\"node\":\"fornac-node\",\"directionArrow\":\"fornac-directionArrow\",\"plot\":\"fornac-plot\",\"selectedNode\":\"fornac-selectedNode\",\"nodeLabel\":\"fornac-nodeLabel\",\"link\":\"fornac-link\",\"plotLabel\":\"fornac-plotLabel\",\"transparent\":\"fornac-transparent\",\"dragLine\":\"fornac-dragLine\",\"mouseEventHelper\":\"fornac-mouseEventHelper\"};\n    if(module.hot) {\n      // 1561380775981\n      var cssReload = require(\"/scr/zweigelt/jango/Software/fornac/node_modules/extract-css-chunks-webpack-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hot\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = require('./slugid');\n","import {Loop} from './loop.js';\nimport {Region} from './region.js';\n\nexport function Connection() {\n\tthis.loop = new Loop();\n\tthis.region = new Region();\n\t// Start and end form the 1st base pair of the region.\n\tthis.start = null;\n    this.end = null;\n\tthis.xrad = null;\n    this.yrad = null;\n    this.angle = null;\n\t// True if segment between this connection and the\n\t// next must be extruded out of the circle\n\tthis.extruded = null;\n\t// True if the extruded segment must be drawn long.\n\tthis.broken = null;\n\n\tthis._isNull = false;\n}\n\nConnection.prototype.isNull = function(){\n\treturn this._isNull;\n}\n\nConnection.prototype.setNull = function(isNull){\n\tthis._isNull = isNull;\n}\n\nConnection.prototype.getLoop = function(){\n\treturn this.loop;\n}\n\nConnection.prototype.setLoop = function(loop) {\n\tthis.loop = loop;\n}\n\nConnection.prototype.getRegion = function(){\n\treturn this.region;\n}\n\nConnection.prototype.setRegion = function(region){\n\tthis.region = region;\n}\n\nConnection.prototype.getStart = function(){\n\treturn this.start;\n}\n\nConnection.prototype.setStart = function(start) {\n\tthis.start = start;\n}\n\nConnection.prototype.getEnd = function(){\n\treturn this.end;\n}\n\nConnection.prototype.setEnd = function(end){\n\tthis.end = end;\n}\n\nConnection.prototype.getXrad = function(){\n\treturn this.xrad;\n}\n\nConnection.prototype.setXrad = function(xrad){\n\tthis.xrad = xrad;\n}\n\nConnection.prototype.getYrad = function(){\n\treturn this.yrad;\n}\n\nConnection.prototype.setYrad = function(yrad) {\n\tthis.yrad = yrad;\n}\n\nConnection.prototype.getAngle = function(){\n\treturn this.angle;\n}\n\nConnection.prototype.setAngle = function(angle){\n\tthis.angle = angle;\n}\n\nConnection.prototype.isExtruded = function(){\n\treturn this.extruded;\n}\n\nConnection.prototype.setExtruded = function(extruded){\n\tthis.extruded = extruded;\n}\n\nConnection.prototype.isBroken = function(){\n\treturn this.broken;\n}\n\nConnection.prototype.setBroken = function(broken){\n\tthis.broken = broken;\n}\n","import {Connection} from './connection.js';\n\nexport function Loop() {\n\tthis.nconnection = null;\n\tthis.connections = [];\n\tthis._connections = [];\n\tthis.number = null;\n\tthis.depth = null;\n\tthis.mark = null;\n\tthis.x = null;\n    this.y = null;\n    this.radius = null;\n}\n\nLoop.prototype.getNconnection = function() {\n\treturn this.nconnection;\n}\n\nLoop.prototype.setNconnection = function(nconnection) {\n\tthis.nconnection = nconnection;\n}\n\nLoop.prototype.setConnection = function(i, c){\n\tif (c != null){\n\t\tthis._connections[i] = c;\n    }\n\telse {\n\t\tif (!this._connections[i]){\n\t\t\tthis._connections[i] = new Connection();\n\t\t}\n\t\tthis._connections[i].setNull(true);\n\t}\n}\n\nLoop.prototype.getConnection = function(i){\n\tvar Connection = require(\"./connection\");\n\tif (!this._connections[i]){\n        this._connections[i] = new Connection();\n    }\n\tvar c = this._connections[i];\n\tif (c.isNull()){\n\t\treturn null;\n    }\n\telse {\n\t\treturn c;\n    }\n}\n\nLoop.prototype.addConnection = function(i, c){\n\tthis._connections.push(c);\n}\n\nLoop.prototype.getNumber = function(){\n\treturn this.number;\n}\n\nLoop.prototype.setNumber = function(number){\n\tthis.number = number;\n}\n\nLoop.prototype.getDepth = function(){\n\treturn this.depth;\n}\n\nLoop.prototype.setDepth = function(depth){\n\tthis.depth = depth;\n}\n\nLoop.prototype.isMark = function(){\n\treturn this.mark;\n}\n\nLoop.prototype.setMark = function(mark){\n\tthis.mark = mark;\n}\n\nLoop.prototype.getX = function(){\n\treturn this.x;\n}\n\nLoop.prototype.setX = function(x){\n\tthis.x = x;\n}\n\nLoop.prototype.getY = function(){\n\treturn this.y;\n}\n\nLoop.prototype.setY = function(y){\n\tthis.y = y;\n}\n\nLoop.prototype.getRadius = function(){\n\treturn this.radius;\n}\n\nLoop.prototype.setRadius = function(radius){\n\tthis.radius = radius;\n}\n","export function Region() {\n\tthis._start1 = null;\n    this._end1 = null;\n    this._start2 = null;\n    this._end2 = null;\n}\n\nRegion.prototype.getStart1 = function(){\n\treturn this._start1;\n}\n\nRegion.prototype.setStart1 = function(start1){\n\tthis._start1 = start1;\n}\n\nRegion.prototype.getEnd1 = function(){\n\treturn this._end1;\n}\n\nRegion.prototype.setEnd1 = function(end1){\n\tthis._end1 = end1;\n}\n\nRegion.prototype.getStart2 = function(){\n\treturn this._start2;\n}\n\nRegion.prototype.setStart2 = function(start2){\n\tthis._start2 = start2;\n}\n\nRegion.prototype.getEnd2 = function(){\n\treturn this._end2;\n}\n\nRegion.prototype.setEnd2 = function(end2){\n\tthis._end2 = end2;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = __webpack_public_path__ + \"fa9b45d63b40299e0188927ca7d381a3.svg\";","// The MIT License (MIT)\n//\n// Copyright (c) 2014 Jonas Finnemann Jensen\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar uuid = require('uuid');\n\n/**\n * Returns the given uuid as a 22 character slug. This can be a regular v4\n * slug or a \"nice\" slug.\n */\nexports.encode = function(uuid_) {\n  var bytes   = uuid.parse(uuid_);\n  var base64  = (new Buffer(bytes)).toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/**\n * Returns the uuid represented by the given v4 or \"nice\" slug\n */\nexports.decode = function(slug) {\n  var base64 = slug\n                  .replace(/-/g, '+')\n                  .replace(/_/g, '/')\n                  + '==';\n  return uuid.unparse(new Buffer(base64, 'base64'));\n};\n\n/**\n * Returns a randomly generated uuid v4 compliant slug\n */\nexports.v4 = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n\n/** \n * Returns a randomly generated uuid v4 compliant slug which conforms to a set\n * of \"nice\" properties, at the cost of some entropy. Currently this means one\n * extra fixed bit (the first bit of the uuid is set to 0) which guarantees the\n * slug will begin with [A-Za-f]. For example such slugs don't require special\n * handling when used as command line parameters (whereas non-nice slugs may\n * start with `-` which can confuse command line tools).\n *\n * Potentially other \"nice\" properties may be added in future to further\n * restrict the range of potential uuids that may be generated.\n */\nexports.nice = function() {\n  var bytes   = uuid.v4(null, new Buffer(16));\n  bytes[0] = bytes[0] & 0x7f;  // unset first bit to ensure [A-Za-f] first char\n  var base64  = bytes.toString('base64');\n  var slug = base64\n              .replace(/\\+/g, '-')  // Replace + with - (see RFC 4648, sec. 5)\n              .replace(/\\//g, '_')  // Replace / with _ (see RFC 4648, sec. 5)\n              .substring(0, 22);    // Drop '==' padding\n  return slug;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","import './d3-context-menu.css';\nimport ArrowIcon from './img/play.svg';\n\nimport d3 from 'd3';\nimport slugid from 'slugid';\n\nexport function contextMenu(menu, opts) {\n    let previouslyMouseUp = false;\n    let clickAway = () => {};\n    let uid = slugid.nice();\n    let rootElement = null;\n    let orientation = 'right';   // display the menu to the right of the mouse click\n                                 // or parent elemement\n    let initialPos = null;\n    let parentStart = null;\n\n    var openCallback,\n        closeCallback;\n\n    if (typeof opts === 'function') {\n        openCallback = opts;\n    } else {\n        opts = opts || {};\n        openCallback = opts.onOpen;\n        closeCallback = opts.onClose;\n    }\n\n    if ('rootElement' in opts)\n        rootElement = opts['rootElement']\n\n    if ('pos' in opts) {\n        // do we want to place this menu somewhere specific?\n        initialPos = opts.pos;\n    }\n\n    if ('orientation' in opts) {\n        orientation = opts.orientation;\n    }\n\n    if ('parentStart' in opts) {\n        parentStart = opts.parentStart;\n    }\n\n    // create the div element that will hold the context menu\n    d3.selectAll('.d3-context-menu-' + uid).data([1])\n        .enter()\n        .append('div')\n        .classed('d3-context-menu', true)\n        .classed('d3-context-menu-' + uid, true)\n\n    // close menu\n    d3.select('body').on('click.d3-context-menu-' + uid, function() {\n        if (previouslyMouseUp) {\n            previouslyMouseUp = false;\n            return;\n        }\n       console.log('body click close');\n\n        d3.select('.d3-context-menu-' + uid).style('display', 'none');\n       orientation = 'right';\n\n        if (closeCallback) {\n            closeCallback();\n        }\n    });\n\n    // this gets executed when a contextmenu event occurs\n    return function(data, index, pMouseUp=false,\n                    clickAwayFunc = function() { } ) {\n        var elm = this;\n        var contextMenuPos = null;\n        let mousePos = null;\n        let currentThis = this;\n\n        if (rootElement == null)\n            mousePos = d3.mouse(this);\n        else\n            mousePos = d3.mouse(rootElement); // for recursive menus, we need the mouse\n                                              // position relative to another element\n\n        clickAway = clickAwayFunc;\n        let openChildMenuUid = null;\n\n        previouslyMouseUp = pMouseUp;\n\n        d3.selectAll('.d3-context-menu-' + uid).html('');\n        var list = d3.selectAll('.d3-context-menu-' + uid)\n            .on('contextmenu', function(d) {\n                console.log('context-menu close');\n                d3.select('.d3-context-menu-' + uid).style('display', 'none'); \n                orientation = 'right';\n\n                d3.event.preventDefault();\n                d3.event.stopPropagation();\n            })\n            .append('ul');\n\n        list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n            .append('li')\n            .attr('class', function(d) {\n                console.log('d:', d);\n                var ret = '';\n                if (d.divider) {\n                    ret += ' is-divider';\n                }\n                if (d.disabled) {\n                    ret += ' is-disabled';\n                }\n                if (!d.action) {\n                    ret += ' is-header';\n                }\n                if ('children' in d) {\n                    ret += ' d3-context-menu-recursive';\n                }\n                return ret;\n            })\n            .html(function(d) {\n                if (d.divider) {\n                    return '<hr>';\n                }\n                if (!d.title) {\n                    console.error('No title attribute set. Check the spelling of your options.');\n                }\n                return (typeof d.title === 'string') ? d.title : d.title(data);\n            })\n            .on('click', function(d, i) {\n                if (d.disabled) return; // do nothing if disabled\n                if (!d.action) return; // headers have no \"action\"\n                d.action(elm, data, index, mousePos);\n                console.log('click close');\n\n                // close all context menus\n                d3.selectAll('.d3-context-menu').style('display', 'none');\n                orientation = 'right';\n\n                if (closeCallback) {\n                    closeCallback();\n                }\n            })\n            .on('mouseenter', function(d, i) {\n                d3.select(this)\n                    .classed('d3-context-menu-selected', true)\n\n                if (openChildMenuUid != null) {\n                    // there's a child menu open\n\n                    // unselect all items\n                    d3.select('.d3-context-menu-' + uid)\n                        .selectAll('li')\n                        .classed('d3-context-menu-selected', false);\n\n                    if (typeof d.children == 'undefined') {\n                        console.log(\"no children close\");\n                        // no children, so hide any open child menus\n                        d3.select('.d3-context-menu-' + openChildMenuUid)\n                        .style('display', 'none');\n\n                        openChildMenuUid = null;\n                        return;\n                    }\n\n                    if (d.childUid == openChildMenuUid) {\n                        // the correct child menu is already open\n                        return;\n\n                    } else {\n                        // need to open a different child menu\n                        console.log('open different child menu close');\n                        \n                        // close the already open one\n                        d3.select('.d3-context-menu-' + openChildMenuUid)\n                        .style('display', 'none');\n\n                        openChildMenuUid = null;\n\n                    }\n                }             \n\n                // there should be no menu open right now\n                if (typeof d.children != 'undefined') {\n                    let boundingRect = this.getBoundingClientRect();\n\n                    let childrenContextMenu = null\n                    if (orientation == 'left') {\n                        childrenContextMenu = contextMenu(d.children, {'rootElement': currentThis,\n                              'pos': [ boundingRect.left + window.pageXOffset,\n                                    boundingRect.top - 2 + window.pageYOffset],\n                        'orientation': 'left'});\n                    } else {\n                        childrenContextMenu = contextMenu(d.children, \n                                      {\n                                          'pos': [ boundingRect.left + boundingRect.width + window.pageXOffset,\n                                                boundingRect.top - 2 + window.pageYOffset],\n                                       'rootElement': currentThis,\n                                    'parentStart': [boundingRect.left + window.pageXOffset,\n                                      boundingRect.top - 2 + window.pageYOffset]});\n                    }\n\n                    d.childUid = childrenContextMenu.apply(this, [data,i,true,\n                                                           function() { }]);\n                    openChildMenuUid = d.childUid;\n                }\n\n\n                d3.select(this)\n                    .classed('d3-context-menu-selected', true)\n            \n            })\n            .on('mouseleave', function(d, i) {\n\n                if (openChildMenuUid == null) {\n                    d3.select(this)\n                        .classed('d3-context-menu-selected', false);\n                }\n            });\n\n            list.selectAll('.d3-context-menu-recursive')\n            .append('img')\n            .attr('src', ArrowIcon)\n            .attr('width', '14px')\n            .attr('height', '14px')\n            .style('position', 'absolute')\n            .style('right', '5px')\n            ;\n\n        // the openCallback allows an action to fire before the menu is displayed\n        // an example usage would be closing a tooltip\n        if (openCallback) {\n            if (openCallback(data, index) === false) {\n                return uid;\n            }\n        }\n\n        let contextMenuSelection = d3.select('.d3-context-menu-' + uid)\n            .style('display', 'block');\n\n        if (initialPos == null) {\n            d3.select('.d3-context-menu-' + uid)\n            .style('left', (d3.event.pageX - 2) + 'px')\n            .style('top', (d3.event.pageY - 2) + 'px')\n        } else {\n            d3.select('.d3-context-menu-' + uid)\n            .style('left', initialPos[0] + 'px')\n            .style('top', initialPos[1] + 'px')\n        }\n\n        // check if the menu disappears off the side of the window\n        let boundingRect = contextMenuSelection.node().getBoundingClientRect();\n\n        if (boundingRect.left + boundingRect.width > window.innerWidth || orientation == 'left') {\n            orientation = 'left';\n\n            // menu goes of the end of the window, position it the other way\n            if (initialPos == null) {\n                // place the menu where the user clicked\n                d3.select('.d3-context-menu-' + uid)\n                .style('left', (d3.event.pageX - 2 - boundingRect.width) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n            } else {\n                if (parentStart != null) {\n                    d3.select('.d3-context-menu-' + uid)\n                    .style('left', (parentStart[0] - boundingRect.width) + 'px')\n                    .style('top', parentStart[1] + 'px')\n                } else {\n                    d3.select('.d3-context-menu-' + uid)\n                    .style('left', (initialPos[0] - boundingRect.width) + 'px')\n                    .style('top', initialPos[1] + 'px')\n                }\n            }\n            \n        }\n\n        // display context menu\n\n        if (previouslyMouseUp)\n            return uid;\n\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        //d3.event.stopImmediatePropagation();\n        //\n        return uid;\n    };\n};\n","var numberSort = function(a,b) { return a - b; };\n\nexport function arraysEqual(a, b) {\n    // courtesy of \n    // http://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript\n  if (a === b) return true;\n  if (a === null || b === null) return false;\n  if (a.length != b.length) return false;\n\n  // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function RNAUtilities() {\n    var self = this;\n\n    // the brackets to use when constructing dotbracket strings\n    // with pseudoknots\n    self.bracketLeft =  \"([{<ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    self.bracketRight = \")]}>abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n    self.inverseBrackets = function(bracket) {\n        var res = {};\n        for (var i = 0; i < bracket.length; i++) {\n            res[bracket[i]] = i;\n        }\n        return res;\n    };\n\n    self.maximumMatching = function maximumMatching(pt){\n        // Courtesy of the great Ronny Lorenz\n\n        var n = pt[0];\n        var TURN = 0;    //minimal number of nucleotides in the hairpin\n\n        /* array init */\n        var mm = new Array(n + 1);\n        for(var i = 0; i <= n; i++){\n            mm[i] = new Array(n + 1);\n            for(var j = i; j <= n; j++)\n            mm[i][j] = 0;\n        }\n        var maximum = 0;\n\n        /* actual computation */\n        for(var i = n - TURN - 1; i > 0; i--)\n\n        for(var j = i + TURN + 1; j <= n; j++){\n            maximum = mm[i][j-1];\n\n            for(var l = j - TURN - 1; l >= i; l--) {\n                if(pt[l] === j) {\n\n                    // we have a base pair here\n                    maximum = Math.max(maximum, ((l > i) ? mm[i][l-1] : 0) + 1 + ((j - l - 1 > 0) ? mm[l+1][j-1] : 0));\n                }\n            }\n\n            mm[i][j] = maximum;\n        }\n\n        maximum = mm[1][n];\n\n        return mm;\n    };\n\n    self.backtrackMaximumMatching = function(mm, oldPt) {\n      var pt = Array.apply(null, \n                           Array(mm.length)).map(function() { return 0 }); \n                           //create an array containing zeros\n\n      self.mmBt(mm, pt, oldPt, 1, mm.length-1);\n      return pt;\n    }\n\n    self.mmBt = function(mm, pt, oldPt, i, j){\n        // Create a pairtable from the backtracking\n      var maximum = mm[i][j];\n      var TURN = 0;\n\n      if(j - i - 1 < TURN) return;    /* no more pairs */\n\n      if(mm[i][j-1] == maximum){      /* j is unpaired */\n        self.mmBt(mm, pt, oldPt, i, j-1);\n        return;\n      }\n\n      for(var q = j - TURN - 1; q >= i; q--){  /* j is paired with some q */\n        if (oldPt[j] !== q)\n            continue;\n\n        var leftPart     = (q > i) ? mm[i][q-1] : 0;\n        var enclosedPart = (j - q - 1 > 0) ? mm[q+1][j-1] : 0;\n\n        if(leftPart + enclosedPart + 1 == maximum) {\n            // there's a base pair between j and q\n            pt[q] = j;\n            pt[j] = q;\n\n            if(i < q) \n                self.mmBt(mm, pt, oldPt, i, q - 1);\n\n            self.mmBt(mm, pt, oldPt, q + 1, j - 1);\n            return;\n        }\n      }\n\n      //alert(i + \",\" + j + \": backtracking failed!\");\n      console.log('FAILED!!!' + i + ',' + j + ': backtracking failed!');\n\n    };\n\n    self.dotbracketToPairtable = function(dotbracket) {\n        // create an array and initialize it to 0\n        var pt = Array.apply(null, new Array(dotbracket.length + 1)).map(Number.prototype.valueOf,0);\n        \n        //  the first element is always the length of the RNA molecule\n        pt[0] = dotbracket.length;\n\n        // store the pairing partners for each symbol\n        var stack = {};\n        for (var i = 0; i < self.bracketLeft.length; i++) {\n            stack[i] = [];\n        }\n\n        // lookup the index of each symbol in the bracket array\n        var inverseBracketLeft = self.inverseBrackets(self.bracketLeft);\n        var inverseBracketRight = self.inverseBrackets(self.bracketRight);\n\n        for (var i = 0; i < dotbracket.length; i++) {\n            var a = dotbracket[i];\n            var ni = i + 1;\n\n            if (a == '.' || a == 'o') {\n                // unpaired\n                pt[ni] = 0;\n            } else {\n                if (a in inverseBracketLeft) {\n                    // open pair?\n                    stack[inverseBracketLeft[a]].push(ni);\n                } else if (a in inverseBracketRight){\n                    // close pair?\n                    var j = stack[inverseBracketRight[a]].pop();\n\n                    pt[ni] = j;\n                    pt[j] = ni;\n                } else {\n                    throw \"Unknown symbol in dotbracket string\";\n                }\n            }\n        }\n\n        for (var key in stack) {\n            if (stack[key].length > 0) {\n                throw \"Unmatched base at position \" + stack[key][0];\n            }\n        }\n\n        return pt;\n    };\n\n    self.insertIntoStack = function(stack, i, j) {\n        var k = 0;\n        while (stack[k].length > 0 && stack[k][stack[k].length - 1] < j) {\n            k += 1;\n        }\n\n        stack[k].push(j);\n        return k;\n    };\n\n    self.deleteFromStack = function(stack, j) {\n        var k = 0;\n        while (stack[k].length === 0 || stack[k][stack[k].length-1] != j) {\n            k += 1;\n        }\n        stack[k].pop();\n        return k;\n    };\n\n    self.pairtableToDotbracket = function(pt) {\n        // store the pairing partners for each symbol\n        var stack = {};\n        for (var i = 0; i < pt[0]; i++) {\n            stack[i] = [];\n        }\n\n        var seen = {};\n        var res = \"\";\n        var i;\n        for (var i = 1; i < pt[0] + 1; i++) {\n            if (pt[i] !== 0 && pt[i] in seen) {\n                throw \"Invalid pairtable contains duplicate entries\";\n            }\n            seen[pt[i]] = true;\n\n            if (pt[i] === 0) {\n                res += '.';\n            } else {\n                if (pt[i] > i) {\n                    res += self.bracketLeft[self.insertIntoStack(stack, i, pt[i])];\n                } else {\n                    res += self.bracketRight[self.deleteFromStack(stack, i)];\n                }\n            }\n        }\n\n        return res;\n    };\n\n    self.findUnmatched = function(pt, from, to) {\n        /*\n         * Find unmatched nucleotides in this molecule.\n         */\n        var toRemove = [];\n        var unmatched = [];\n\n        var origFrom = from;\n        var origTo = to;\n        var i;\n\n        for (var i = from; i <= to; i++)\n            if (pt[i] !== 0 && (pt[i] < from || pt[i] > to))\n                unmatched.push([i,pt[i]]);\n\n        for (var i = origFrom; i <= origTo; i++) {\n            while (pt[i] === 0 && i <= origTo) i++;\n\n            to = pt[i];\n\n            while (pt[i] === to) {\n                i++;\n                to--;\n            }\n            \n            toRemove = toRemove.concat(self.findUnmatched(pt, i, to));\n        }\n\n        if (unmatched.length > 0)\n            toRemove.push(unmatched);\n\n        return toRemove;\n    };\n\n    self.removePseudoknotsFromPairtable = function(pt) {\n        /* Remove the pseudoknots from this structure in such a fashion\n         * that the least amount of base-pairs need to be broken\n         *\n         * The pairtable is manipulated in place and a list of tuples\n         * indicating the broken base pairs is returned.\n         */\n\n        var mm = self.maximumMatching(pt);\n        var newPt = self.backtrackMaximumMatching(mm, pt);\n        var removed = [];\n\n        for (var i = 1; i < pt.length; i++) {\n            if (pt[i] < i)\n                continue;\n\n            if (newPt[i] != pt[i])  {\n                removed.push([i, pt[i]]);\n                pt[pt[i]] = 0;\n                pt[i] = 0;\n            }\n        }\n\n        return removed;\n    };\n\n    self.ptToElements = function(pt, level, i, j, dotBracketBreaks) {\n        /* Convert a pair table to a list of secondary structure \n         * elements:\n         *\n         * [['s',1,[2,3]]\n         *\n         * The 's' indicates that an element can be a stem. It can also be\n         * an interior loop ('i'), a hairpin loop ('h') or a multiloop ('m')\n         *\n         * The second number (1 in this case) indicates the depth or\n         * how many base pairs have to be broken to get to this element.\n         *\n         * Finally, there is the list of nucleotides which are part of\n         * of this element.\n         */\n        var elements = [];\n        var u5 = [i-1];\n        var u3 = [j+1];\n\n        if (arguments.length < 5)\n            dotBracketBreaks = [];\n\n        if (i > j)\n            return [];\n            \n            //iterate over the unpaired regions on either side\n            //this is either 5' and 3' unpaired if level == 0\n            //or an interior loop or a multiloop\n            for (; pt[i] === 0; i++) { u5.push(i); }\n            for (; pt[j] === 0; j--) { u3.push(j); }\n\n            if (i > j) {\n                //hairpin loop or one large unpaired molecule\n                u5.push(i);\n                if (level === 0)\n                    return [['e',level, u5.sort(numberSort)]];\n                else {\n                    // check to see if we have chain breaks due\n                    // to multiple strands in the input\n                    var external = false;\n                    var left = [];\n                    var right = [];\n                    for (var k = 0; k < u5.length; k++) {\n                        if (external)\n                            right.push(u5[k]);\n                        else\n                            left.push(u5[k]);\n\n                        if (dotBracketBreaks.indexOf(u5[k]) >= 0)\n                            external = true;\n                    }\n\n                    if (external) {\n                        return [['h',level, u5.sort(numberSort)]];\n                    }\n                    else\n                        // if not, this is a simple hairpin loop\n                        return [['h',level, u5.sort(numberSort)]];\n                }\n            }\n\n            if (pt[i] != j) {\n                //multiloop\n                var m = u5;\n                var k = i;\n\n                // the nucleotide before and the starting nucleotide\n                m.push(k);\n                while (k <= j) {\n                    // recurse into a stem\n                    elements = elements.concat(self.ptToElements(pt, level, k, pt[k], dotBracketBreaks));\n\n                    // add the nucleotides between stems\n                    m.push(pt[k]);\n                    k = pt[k] + 1;\n                    for (; pt[k] === 0 && k <= j; k++) { m.push(k);}\n                    m.push(k);\n                }\n                m.pop();\n                m = m.concat(u3);\n                \n                if (m.length > 0) {\n                    if (level === 0)\n                        elements.push(['e', level, m.sort(numberSort)]);\n                    else\n                        elements.push(['m', level, m.sort(numberSort)]);\n                }\n                \n                return elements;\n            }\n\n            if (pt[i] === j) {\n                //interior loop\n                u5.push(i);\n                u3.push(j);\n\n                var combined = u5.concat(u3);\n                if (combined.length > 4) {\n                    if (level === 0)\n                        elements.push(['e',level, u5.concat(u3).sort(numberSort)]);\n                    else\n                        elements.push(['i',level, u5.concat(u3).sort(numberSort)]);\n                }\n            } \n\n            var s = [];\n            //go through the stem\n            while (pt[i] === j && i < j) {\n                //one stem\n                s.push(i);\n                s.push(j);\n\n                i += 1;\n                j -= 1;\n\n                level += 1;\n            }\n\n            u5 = [i-1];\n            u3 = [j+1];\n            elements.push(['s', level, s.sort(numberSort)]);\n\n        return elements.concat(self.ptToElements(pt, level, i, j, dotBracketBreaks));\n    };\n\n}\n\nexport var rnaUtilities = new RNAUtilities();\n\nexport function ColorScheme(colorsText) {\n    var self = this;\n    self.colorsText = colorsText;\n\n    self.parseRange = function(rangeText) {\n        //parse a number range such as 1-10 or 3,7,9 or just 7\n        var parts = rangeText.split(',')\n        var nums = [];\n\n        for (var i = 0; i < parts.length; i++) {\n            //could be 1 or 10-11  or something like that\n            var parts1 = parts[i].split('-');\n\n            if (parts1.length == 1)\n                nums.push(parseInt(parts1[0]));\n            else if (parts1.length == 2) {\n                var from = parseInt(parts1[0]);\n                var to = parseInt(parts1[1]);\n\n                // add each number in this range\n                for (var j = from; j <= to; j++) \n                    nums.push(j)\n            } else {\n                console.log('Malformed range (too many dashes):', rangeText);\n            }\n        }\n\n        return nums;\n    }\n\n    self.parseColorText = function(colorText) {\n        /* Parse the text of an RNA color string. Instructions and description\n         * of the format are given below.\n         *\n         * The return is a json double dictionary indexed first by the \n         * molecule name, then by the nucleotide. This is then applied\n         * by force.js to the RNAs it is displaying. When no molecule\n         * name is specified, the color is applied to all molecules*/\n        var lines = colorText.split('\\n');\n        var currMolecule = '';\n        var counter = 1;\n        var colorsJson = {colorValues: {'':{}}, range:['white', 'steelblue']};\n        var domainValues = [];\n\n\n        for (var i = 0; i < lines.length; i++) {\n\n            if (lines[i][0] == '>') {\n                // new molecule\n                currMolecule = lines[i].trim().slice(1);\n                counter = 1;\n\n                colorsJson.colorValues[currMolecule] = {};\n                continue;\n            }\n\n            let words = lines[i].trim().split(/[\\s]+/);\n\n            for (var j = 0; j < words.length; j++) {\n                if (isNaN(words[j])) {\n                    if (words[j].search('range') === 0) {\n                        //there's a color scale in this entry\n                        let parts = words[j].split('=');\n                        let partsRight = parts[1].split(':')\n                        colorsJson.range = [partsRight[0], partsRight[1]];\n                        continue;\n                    }\n\n                    if (words[j].search('domain') == 0) {\n                        //there's a color scale in this entry\n                        let parts = words[j].split('=');\n                        let partsRight = parts[1].split(':')\n                        colorsJson.domain = [partsRight[0], partsRight[1]];\n                        continue;\n                    }\n\n                    // it's not a number, should be a combination \n                    // of a number (nucleotide #) and a color\n                    let parts = words[j].split(':');\n                    let nums = self.parseRange(parts[0]);\n                    let color = parts[1]\n\n                    for (var k = 0; k < nums.length; k++) {\n                        if (isNaN(color)) {\n                            colorsJson.colorValues[currMolecule][nums[k]] = color;\n                        } else {\n                            colorsJson.colorValues[currMolecule][nums[k]] = +color;\n                            domainValues.push(Number(color));\n                        }\n                    }\n                } else {\n                    //it's a number, so we add it to the list of values\n                    //seen for this molecule\n                    colorsJson.colorValues[currMolecule][counter] = Number(words[j]);\n                    counter += 1;\n\n                    domainValues.push(Number(words[j]));\n                }\n            }\n        }\n\n        if (!('domain' in colorsJson))\n            colorsJson.domain = [Math.min.apply(null, domainValues), Math.max.apply(null, domainValues)];\n\n        self.colorsJson = colorsJson;\n\n        return self;\n    };\n\n    self.normalizeColors = function() {\n        /* \n         * Normalize the passed in values so that they range from\n         * 0 to 1\n         */\n        var value;\n\n        for (var moleculeName in self.colorsJson) {\n            var minNum = Number.MAX_VALUE;\n            var maxNum = Number.MIN_VALUE;\n\n            // iterate once to find the min and max values;\n            for (var resnum in self.colorsJson.colorValues[moleculeName]) {\n                value = self.colorsJson.colorValues[moleculeName][resnum];\n                if (typeof value == 'number') {\n                    if (value < minNum)\n                        minNum = value;\n                    if (value > maxNum)\n                        maxNum = value;\n                }\n            }\n\n            // iterate again to normalize\n            for (resnum in self.colorsJson.colorValues[moleculeName]) {\n                value = self.colorsJson.colorValues[moleculeName][resnum];\n                if (typeof value == 'number') {\n                    self.colorsJson.colorValues[moleculeName][resnum] = (value - minNum ) / (maxNum - minNum);\n                }\n            }\n        }\n\n        return self;\n    };\n\n    self.parseColorText(self.colorsText);\n    return self;\n}\n","import {arraysEqual,RNAUtilities,rnaUtilities} from './rnautils.js';\nimport slugid from 'slugid';\n\nvar numberSort = function(a,b) { return a - b; };\n\nif (typeof(String.prototype.trim) === 'undefined') {\n    String.prototype.trim = function() {\n        return String(this).replace(/^\\s+|\\s+$/g, '');\n    };\n}\n\nexport function ProteinGraph(structName, size, uid) {\n    var self = this;\n\n    self.type = 'protein';\n    self.size = size;\n    self.nodes = [{'name': 'P',\n                   'num': 1,\n                   'radius': 3 *  Math.sqrt(size),\n                   'rna': self,\n                   'nodeType': 'protein',\n                   'structName': structName,\n                   'elemType': 'p',\n                   'size': size,\n                   'uid': slugid.nice()}];\n\n    self.links = [];\n    self.uid = slugid.nice();\n\n    self.addUids = function(uids) {\n        for (let i = 0; i < uids.length; i++)\n            self.nodes[i].uid = uids[i];\n\n        return self;\n    };\n\n    self.getUids = function() {\n        /* Get the positions of each node so that they\n         * can be passed to elementsToJson later\n         */\n        uids = [];\n        for (let i = 0; i < self.dotbracket.length; i++)\n            uids.push(self.nodes[i].uid);\n\n        return uids;\n    };\n\n}\n\nexport function RNAGraph(seq = '', dotbracket = '', structName = '', startNumber = 1) {\n    var self = this;\n\n    self.type = 'rna';\n    self.circularizeExternal = false;\n    self.seq = seq;\n    self.dotbracket = dotbracket;  //i.e. ..((..))..\n    self.structName = structName;\n    self.circular = false;\n\n    if (self.dotbracket.slice(-1) == '*') {\n        //circular RNA\n        self.dotbracket = self.dotbracket.slice(0, -1);\n        self.circular = true;\n    }\n\n    self.uid = slugid.nice();\n\n    self.elements = [];            //store the elements and the\n                                   //nucleotides they contain\n    self.pseudoknotPairs = [];\n    self.nucsToNodes = {};\n\n    self.addUids = function(uids) {\n        let nucleotideNodes = self.nodes.filter(function(d) { return d.nodeType == 'nucleotide'; });\n\n        for (let i = 0; i < uids.length && i < nucleotideNodes.length; i++) {\n            nucleotideNodes[i].uid = uids[i];\n        }\n\n        return self;\n    };\n\n    self.computePairtable = function() {\n        self.pairtable = rnaUtilities.dotbracketToPairtable(self.dotbracket);\n    };\n\n    self.removeBreaks = function(targetString) {\n        // Remove all chain breaks (denoted with a '&', which indicate\n        // that the input represents more than one strand)\n        var breaks = [];\n        var breakIndex = -1;\n\n        while ((breakIndex = targetString.indexOf('&')) >= 0) {\n            breaks.push(breakIndex);\n            targetString = targetString.substring(0, breakIndex) + targetString.substring(breakIndex+1, targetString.length);\n\n        }\n\n        return {targetString: targetString,  breaks: breaks};\n    };\n\n    var ret = self.removeBreaks(self.dotbracket);\n    self.dotbracket = ret.targetString;\n    self.dotBracketBreaks = ret.breaks;\n\n    ret = self.removeBreaks(self.seq);\n    self.seq = ret.targetString;\n    self.seqBreaks = ret.breaks;\n\n    self.rnaLength = self.dotbracket.length;\n\n    if (!arraysEqual(self.dotBracketBreaks, self.seqBreaks)) {\n        console.log('WARNING: Sequence and structure breaks not equal');\n        console.log('WARNING: Using the breaks in the structure');\n    }\n\n    self.computePairtable();\n\n    self.addPositions = function(nodeType, positions) {\n        let labelNodes = self.nodes.filter(function(d) { return d.nodeType == nodeType; });\n\n        for  (let i = 0; i < labelNodes.length; i++) {\n            labelNodes[i].x = positions[i][0];\n            labelNodes[i].y = positions[i][1];\n        }\n\n        return self;\n    };\n\n    self.breakNodesToFakeNodes = function() {\n        // convert all the nodes following breaks to fake nodes\n        let labelNodes = self.nodes.filter(function(d) { return d.nodeType == 'nucleotide'; });\n\n        // if a node was an artifical break node, convert it to a middle\n        for (let i = 0; i < labelNodes.length; i++) {\n            if (self.dotBracketBreaks.indexOf(i) >= 0) {\n                labelNodes[i].nodeType = 'middle';\n                labelNodes[i+1].nodeType = 'middle';\n            }\n        }\n\n        for (let i = 0; i < self.elements.length; i++) {\n            var broken = false;\n\n            // change the elemType of the other nodes in the element containing\n            // the break\n            for (let j = 0; j < self.elements[i][2].length; j++) {\n                if (self.dotBracketBreaks.indexOf(self.elements[i][2][j]) >= 0)\n                    broken = true;\n            }\n\n            if (broken) {\n                self.elements[i][2].map(function(x) {\n                    if (x == 0)\n                        return;\n                    self.nodes[x-1].elemType = 'e';\n                });\n            } else {\n                self.elements[i][2].map(function(x) {\n                    if (x == 0)\n                        return;\n                    self.nodes[x-1].elemType = self.elements[i][0];\n                });\n            }\n        }\n        return self;\n    };\n\n    self.getPositions = function(nodeType) {\n        var positions = [];\n        let nucleotideNodes = self.nodes.filter(function(d) { return d.nodeType == nodeType; });\n\n        for (let i = 0; i < nucleotideNodes.length; i++)\n            positions.push([nucleotideNodes[i].x, nucleotideNodes[i].y]);\n\n        return positions;\n    };\n\n    self.getUids = function() {\n        /* Get the positions of each node so that they\n         * can be passed to elementsToJson later\n         */\n        var uids = [];\n        for (let i = 0; i < self.dotbracket.length; i++)\n            uids.push(self.nodes[i].uid);\n\n        return uids;\n    };\n\n    self.reinforceStems = function() {\n        var pt = self.pairtable;\n        let relevantElements = self.elements.filter( function(d) {\n            return d[0] == 's' && d[2].length >= 4;\n        });\n\n        for (let i = 0; i < relevantElements.length; i++) {\n            let allNucs = relevantElements[i][2];\n            let nucs = allNucs.slice(0, allNucs.length / 2);\n\n            for (let j = 0; j < nucs.length-1; j++) {\n                self.addFakeNode([nucs[j], nucs[j+1], pt[nucs[j+1]], pt[nucs[j]]]);\n            }\n        }\n\n        return self;\n    };\n\n    self.reinforceLoops = function() {\n        /*\n         * Add a set of fake nodes to enforce the structure\n         */\n        var filterNucs = function(d) {\n            return d !== 0 && d <= self.dotbracket.length;\n        };\n\n        for (let i = 0; i < self.elements.length; i++) {\n            if (self.elements[i][0] == 's' || (!self.circularizeExternal && self.elements[i][0] == 'e'))\n                continue;\n\n            var nucs = self.elements[i][2].filter(filterNucs);\n\n            if (self.elements[i][0] == 'e') {\n                var newNode1 = {'name': '',\n                    'num': -3,\n                    //'radius': 18 * radius -6,\n                    'radius': 0,\n                    'rna': self,\n                    'nodeType': 'middle',\n                    'elemType': 'f',\n                    'nucs': [],\n                    'x': self.nodes[self.rnaLength-1].x,\n                    'y': self.nodes[self.rnaLength-1].y,\n                    'px': self.nodes[self.rnaLength-1].px,\n                    'py': self.nodes[self.rnaLength-1].py,\n                    'uid': slugid.nice() };\n                var newNode2 = {'name': '',\n                    'num': -2,\n                    //'radius': 18 * radius -6,\n                    'radius': 0,\n                    'rna': self,\n                    'nodeType': 'middle',\n                    'elemType': 'f',\n                    'nucs': [],\n                    'x': self.nodes[0].x,\n                    'y': self.nodes[0].y,\n                    'px': self.nodes[0].px,\n                    'py': self.nodes[0].py,\n                    'uid': slugid.nice() };\n\n                    nucs.push(self.nodes.length+1);\n                    nucs.push(self.nodes.length+2);\n                    self.nodes.push(newNode1);\n                    self.nodes.push(newNode2);\n            }\n\n\n            self.addFakeNode(nucs);\n        }\n\n        return self;\n    };\n\n    self.updateLinkUids = function() {\n        for (let i = 0; i < self.links.length; i++) {\n            self.links[i].uid = self.links[i].source.uid + self.links[i].target.uid;\n        }\n\n        return self;\n    };\n\n    self.addFakeNode = function(nucs) {\n        var linkLength = 18; //make sure this is consistent with the value in force.js\n        var nodeWidth = 6;\n        var angle = (3.1415 * 2) / (2 * nucs.length);\n        var radius =  linkLength / (2 * Math.tan(angle));\n\n        var fakeNodeUid = '';\n\n        for (let i = 0; i < nucs.length; i++)\n            fakeNodeUid += self.nodes[nucs[i]-1].uid;\n\n        var newNode = {'name': '',\n                         'num': -1,\n                         //'radius': 18 * radius -6,\n                         'radius': radius,\n                         'rna': self,\n                         'nodeType': 'middle',\n                         'elemType': 'f',\n                         'nucs': nucs,\n                         'uid': fakeNodeUid };\n        self.nodes.push(newNode);\n\n        var newX = 0;\n        var newY = 0;\n        var coordsCounted = 0;\n\n        angle = (nucs.length - 2) * 3.14159 / (2 * nucs.length);\n        radius = 0.5 / Math.cos(angle);\n\n        for (let j = 0; j < nucs.length; j++) {\n            if (nucs[j] === 0 || nucs[j] > self.dotbracket.length)\n                continue;\n\n            //link to the center node\n            self.links.push({'source': self.nodes[nucs[j] - 1],\n                             'target': self.nodes[self.nodes.length-1],\n                             'linkType': 'fake',\n                             'value': radius,\n                             'uid': slugid.nice() });\n\n            if (nucs.length > 4) {\n                //link across the loop\n                self.links.push({'source': self.nodes[nucs[j] - 1],\n                                 'target': self.nodes[nucs[(j + Math.floor(nucs.length / 2)) % nucs.length] - 1],\n                                 'linkType': 'fake',\n                                 'value': radius * 2,\n                                 'uid': slugid.nice() });\n            }\n\n            var ia = ((nucs.length - 2) * 3.14159) / nucs.length;\n            var c = 2 * Math.cos(3.14159 / 2 - ia / 2);\n            //link to over-neighbor\n            self.links.push({'source': self.nodes[nucs[j] - 1],\n                             'target': self.nodes[nucs[(j + 2) % nucs.length] - 1],\n                             'linkType': 'fake',\n                             'value': c});\n\n            // calculate the mean of the coordinats in this loop\n            // and place the fake node there\n            var fromNode = self.nodes[nucs[j]-1];\n            if ('x' in fromNode) {\n                newX += fromNode.x;\n                newY += fromNode.y;\n\n                coordsCounted += 1;\n            }\n        }\n\n        if (coordsCounted > 0) {\n            // the nucleotides had set positions so we can calculate the position\n            // of the fake node\n            newNode.x = newX / coordsCounted;\n            newNode.y = newY / coordsCounted;\n            newNode.px = newNode.x;\n            newNode.py = newNode.y;\n        }\n\n        return self;\n    };\n\n    self.connectFakeNodes = function() {\n        var linkLength = 18;\n\n        // We want to be able to connect all of the fake nodes\n        // and create a structure consisting of just them\n        var filterOutNonFakeNodes = function(d) {\n            return d.nodeType == 'middle';\n        }\n\n        var nucsToNodes = {};\n        var fakeNodes = self.nodes.filter(filterOutNonFakeNodes);\n        var linked = {};\n\n        // initialize the nucleotides to nodes\n        for (var i = 1; i <= self.nodes.length; i++)\n            nucsToNodes[i] = [];\n\n        for (var i = 0; i < fakeNodes.length; i++) {\n            var thisNode = fakeNodes[i];\n\n            // each fake node represents a certain set of nucleotides (thisNode.nucs)\n            for (var j = 0; j < thisNode.nucs.length; j++) {\n                var thisNuc = thisNode.nucs[j];\n\n                // check to see if this nucleotide has been seen in another fake node\n                // if it has, then we add a link between the two nodes\n                for (var k = 0; k < nucsToNodes[thisNuc].length; k++) {\n                    if (JSON.stringify([nucsToNodes[thisNuc][k].uid, thisNode.uid].sort()) in linked)\n                        continue; //already linked\n\n                    var distance = nucsToNodes[thisNuc][k].radius + thisNode.radius;\n\n                    self.links.push({'source': nucsToNodes[thisNuc][k],\n                                      'target': thisNode,\n                                      'value': distance / linkLength,\n                                      'linkType': 'fake_fake'});\n\n                    // note that we've already seen this link\n                    linked[JSON.stringify([nucsToNodes[thisNuc][k].uid, thisNode.uid].sort())] = true;\n                }\n\n                nucsToNodes[thisNuc].push(thisNode);\n            }\n        }\n\n        return self;\n\n    };\n\n    self.addExtraLinks = function(extraLinks) {\n        if (typeof extraLinks == 'undefined')\n            return self;\n\n        for (var i = 0; i < extraLinks.length; i++) {\n            var source = self.getNodeFromNucleotides(extraLinks[i].from);\n            var target = self.getNodeFromNucleotides(extraLinks[i].to);\n\n            var newLink = {'source': source, 'target': target, 'linkType': 'extra',\n                'extraLinkType': extraLinks[i].linkType, 'uid': slugid.nice() };\n\n                self.links.push(newLink);\n        }\n\n        return self;\n    }\n\n\n    self.elementsToJson = function() {\n        /* Convert a set of secondary structure elements to a json\n         * representation of the graph that can be used with d3's\n         * force-directed layout to generate a visualization of\n         * the structure.\n         */\n        var pt = self.pairtable;\n        var elements = self.elements;\n\n        self.nodes = [];\n        self.links = [];\n\n        //create a reverse lookup so we can find out the type\n        //of element that a node is part of\n        var elemTypes = {};\n\n        //sort so that we count stems last\n        self.elements.sort();\n\n        for (let i = 0; i < self.elements.length; i++) {\n            var nucs = self.elements[i][2];\n            for (let j = 0; j < nucs.length; j++) {\n                elemTypes[nucs[j]] = self.elements[i][0];\n            }\n        }\n\n        for (let i = 1; i <= pt[0]; i++) {\n            var nodeName = self.seq[i-1];\n\n            if (self.dotBracketBreaks.indexOf(i-1) >= 0 ||\n                self.dotBracketBreaks.indexOf(i-2) >= 0) {\n                nodeName = '';\n            }\n\n            //create a node for each nucleotide\n            self.nodes.push({'name': nodeName,\n                             'num': startNumber + i - 1,\n                             'radius': 5,\n                             'rna': self,\n                             'nodeType': 'nucleotide',\n                             'structName': self.structName,\n                             'elemType': elemTypes[i],\n                             'uid': slugid.nice(),\n                             'linked': false});\n        }\n\n        for (let i = 0; i < self.nodes.length; i++) {\n            if (i === 0)\n                self.nodes[i].prevNode = null;\n            else {\n                self.nodes[i].prevNode = self.nodes[i-1];\n            }\n\n            if (i == self.nodes.length-1)\n                self.nodes[i].nextNode = null;\n            else {\n                self.nodes[i].nextNode = self.nodes[i+1];\n            }\n        }\n\n        for (let i = 1; i <= pt[0]; i++) {\n\n            if (pt[i] !== 0) {\n                // base-pair links\n                self.links.push({'source': self.nodes[i-1],\n                                 'target': self.nodes[pt[i]-1],\n                                 'linkType': 'basepair',\n                                 'value': 1,\n                                 'uid': slugid.nice() });\n            }\n\n            if (i > 1) {\n                // backbone links\n                if (self.dotBracketBreaks.indexOf(i-1) === -1 &&\n                    self.dotBracketBreaks.indexOf(i-2) == -1 &&\n                    self.dotBracketBreaks.indexOf(i-3) == -1) {\n                    // there is no break in the strands here\n                    // we can add a backbone link\n                    self.links.push({'source': self.nodes[i-2],\n                                    'target': self.nodes[i-1],\n                                    'linkType': 'backbone',\n                                    'value': 1,\n                                    'uid': slugid.nice() });\n                    self.nodes[i-1].linked = true;\n                }\n            }\n        }\n\n        //add the pseudoknot links\n        for (let i = 0; i < self.pseudoknotPairs.length; i++) {\n            self.links.push({'source': self.nodes[self.pseudoknotPairs[i][0]-1],\n                            'target': self.nodes[self.pseudoknotPairs[i][1]-1],\n                            'linkType': 'pseudoknot',\n                            'value': 1,\n                            'uid': slugid.nice()});\n        }\n\n        if (self.circular) {\n            self.links.push({'source': self.nodes[0],\n                            'target': self.nodes[self.rnaLength-1],\n                            'linkType': 'backbone',\n                            'value': 1,\n                            'uid': slugid.nice() });\n\n        }\n\n        return self;\n    };\n\n    self.ptToElements = function(pt, level, i, j) {\n        /* Convert a pair table to a list of secondary structure\n         * elements:\n         *\n         * [['s',1,[2,3]]\n         *\n         * The 's' indicates that an element can be a stem. It can also be\n         * an interior loop ('i'), a hairpin loop ('h') or a multiloop ('m')\n         *\n         * The second number (1 in this case) indicates the depth or\n         * how many base pairs have to be broken to get to this element.\n         *\n         * Finally, there is the list of nucleotides which are part of\n         * of this element.\n         */\n        var elements = [];\n        var u5 = [i-1];\n        var u3 = [j+1];\n\n        if (i > j)\n            return [];\n\n            //iterate over the unpaired regions on either side\n            //this is either 5' and 3' unpaired if level == 0\n            //or an interior loop or a multiloop\n            for (; pt[i] === 0; i++) { u5.push(i); }\n            for (; pt[j] === 0; j--) { u3.push(j); }\n\n            if (i > j) {\n                //hairpin loop or one large unpaired molecule\n                u5.push(i);\n                if (level === 0)\n                    return [['e',level, u5.sort(numberSort)]];\n                else {\n                    // check to see if we have chain breaks due\n                    // to multiple strands in the input\n                    var external = false;\n                    var left = [];\n                    var right = [];\n                    for (var k = 0; k < u5.length; k++) {\n                        if (external)\n                            right.push(u5[k]);\n                        else\n                            left.push(u5[k]);\n\n                        if (self.dotBracketBreaks.indexOf(u5[k]) >= 0)\n                            external = true;\n                    }\n\n                    if (external) {\n                        return [['h',level, u5.sort(numberSort)]];\n                    }\n                    else\n                        // if not, this is a simple hairpin loop\n                        return [['h',level, u5.sort(numberSort)]];\n                }\n            }\n\n            if (pt[i] != j) {\n                //multiloop\n                var m = u5;\n                var k = i;\n\n                // the nucleotide before and the starting nucleotide\n                m.push(k);\n                while (k <= j) {\n                    // recurse into a stem\n                    elements = elements.concat(self.ptToElements(pt, level, k, pt[k]));\n\n                    // add the nucleotides between stems\n                    m.push(pt[k]);\n                    k = pt[k] + 1;\n                    for (; pt[k] === 0 && k <= j; k++) { m.push(k);}\n                    m.push(k);\n                }\n                m.pop();\n                m = m.concat(u3);\n\n                if (m.length > 0) {\n                    if (level === 0)\n                        elements.push(['e', level, m.sort(numberSort)]);\n                    else\n                        elements.push(['m', level, m.sort(numberSort)]);\n                }\n\n                return elements;\n            }\n\n            if (pt[i] === j) {\n                //interior loop\n                u5.push(i);\n                u3.push(j);\n\n                var combined = u5.concat(u3);\n                if (combined.length > 4) {\n                    if (level === 0)\n                        elements.push(['e',level, u5.concat(u3).sort(numberSort)]);\n                    else\n                        elements.push(['i',level, u5.concat(u3).sort(numberSort)]);\n                }\n            }\n\n            var s = [];\n            //go through the stem\n            while (pt[i] === j && i < j) {\n                //one stem\n                s.push(i);\n                s.push(j);\n\n                i += 1;\n                j -= 1;\n\n                level += 1;\n            }\n\n            u5 = [i-1];\n            u3 = [j+1];\n            elements.push(['s', level, s.sort(numberSort)]);\n\n        return elements.concat(self.ptToElements(pt, level, i, j));\n    };\n\n    self.addLabels = function(startNumber = 1, labelInterval = 10) {\n        if (labelInterval === 0)\n            return self;\n\n        for (let i = 1; i <= self.rnaLength; i++) {\n            // add labels\n            if (i % labelInterval === 0) {\n                //create a node for each label\n                let newX, newY;\n\n                let thisNode = self.nodes[i-1];\n                let prevNode, nextNode;\n                let prevVec, nextVec;\n\n                if (self.rnaLength == 1) {\n                    nextVec = [thisNode.x - 15, thisNode.y];\n                    prevVec = [thisNode.x - 15, thisNode.y];\n                } else {\n                    // if we're labelling the first node, then label it in relation to the last\n                    if (i == 1)\n                        prevNode = self.nodes[self.rnaLength - 1];\n                    else\n                        prevNode = self.nodes[i - 2];\n\n                    // if we're labelling the last node, then label it in relation to the first\n                    if (i == self.rnaLength)\n                        nextNode = self.nodes[0];\n                    else\n                        nextNode = self.nodes[i];\n\n                    // this nucleotide and its neighbors are paired\n                    if (self.pairtable[nextNode.num - startNumber+1] !== 0 &&\n                        self.pairtable[prevNode.num - startNumber+1] !== 0 &&\n                        self.pairtable[thisNode.num - startNumber+1] !== 0) {\n\n                        prevNode = nextNode = self.nodes[self.pairtable[thisNode.num - startNumber+1]-1];\n                    }\n\n                    // this node is paired but at least one of its neighbors is unpaired\n                    // place the label in the direction of the two neighbors\n                    if (self.pairtable[thisNode.num - startNumber+1] !== 0 && (\n                        self.pairtable[nextNode.num - startNumber+1] === 0 ||\n                        self.pairtable[prevNode.num - startNumber+1] === 0)) {\n                        nextVec = [thisNode.x - nextNode.x, thisNode.y - nextNode.y];\n                        prevVec = [thisNode.x - prevNode.x, thisNode.y - prevNode.y];\n\n                    } else {\n                        nextVec = [nextNode.x - thisNode.x, nextNode.y - thisNode.y];\n                        prevVec = [prevNode.x - thisNode.x, prevNode.y - thisNode.y];\n                    }\n                }\n\n                var combinedVec = [nextVec[0] + prevVec[0], nextVec[1] + prevVec[1]];\n                var vecLength = Math.sqrt(combinedVec[0] * combinedVec[0] + combinedVec[1] * combinedVec[1]);\n                var normedVec = [combinedVec[0] / vecLength, combinedVec[1] / vecLength];\n                var offsetVec = [-15 * normedVec[0], -15 * normedVec[1]];\n\n                newX = self.nodes[i-1].x + offsetVec[0];\n                newY = self.nodes[i-1].y + offsetVec[1];\n\n                var newNode = {'name': i + startNumber -1,\n                                 'num': -1,\n                                 'radius': 6,\n                                 'rna': self,\n                                 'nodeType': 'label',\n                                 'structName': self.structName,\n                                 'elemType': 'l',\n                                 'x': newX,\n                                 'y': newY,\n                                 'px': newX,\n                                 'py': newY,\n                                 'uid': slugid.nice() };\n                var newLink = {'source': self.nodes[i-1],\n                            'target': newNode,\n                            'value': 1,\n                            'linkType': 'label_link',\n                            'uid': slugid.nice() };\n\n                self.nodes.push(newNode);\n                self.links.push(newLink);\n            }\n        }\n\n        return self;\n    };\n\n    self.recalculateElements = function() {\n        self.removePseudoknots();\n        self.elements = self.ptToElements(self.pairtable, 0, 1, self.dotbracket.length);\n\n        if (self.circular) {\n            //check to see if the external loop is a hairpin or a multiloop\n            let externalLoop = self.elements.filter(function(d) { if (d[0] == 'e') return true; });\n\n            if (externalLoop.length > 0) {\n                eloop = externalLoop[0];\n                nucs = eloop[2].sort(numberSort);\n\n                prev = nucs[0];\n                hloop = true;\n                numGreater = 0;\n                for (let i = 1; i < nucs.length; i++) {\n                    if (nucs[i] - prev > 1) {\n                        numGreater += 1;\n                    }\n                    prev = nucs[i];\n                }\n\n                if (numGreater == 1) {\n                    eloop[0] = 'h';\n                } else if (numGreater == 2) {\n                    eloop[0] = 'i';\n                } else {\n                    eloop[0] = 'm';\n                }\n            }\n        }\n\n        return self;\n    };\n\n    self.reassignLinkUids = function() {\n        // reassign uids to the links, corresponding to the uids of the two nodes\n        // they connect\n        var i;\n\n        for (var i = 0; i < self.links.length; i++) {\n            self.links[i].uid = self.links[i].source.uid + self.links[i].target.uid;\n        }\n\n        return self;\n    }\n\n    self.removePseudoknots = function() {\n        if (self.pairtable.length > 1)\n            self.pseudoknotPairs = self.pseudoknotPairs.concat(rnaUtilities.removePseudoknotsFromPairtable(self.pairtable));\n\n        return self;\n    };\n\n    self.addPseudoknots = function() {\n        /* Add all of the pseudoknot pairs which are stored outside\n         * of the pairtable back to the pairtable\n         */\n        var pt = self.pairtable;\n        var pseudoknotPairs = self.pseudoknotPairs;\n\n        for (var i = 0; i < pseudoknotPairs.length; i++) {\n            pt[pseudoknotPairs[i][0]] = pseudoknotPairs[i][1];\n            pt[pseudoknotPairs[i][1]] = pseudoknotPairs[i][0];\n        }\n\n        self.pseudoknotPairs = [];\n        return self;\n    };\n\n    self.addName = function(name) {\n        if (typeof name == 'undefined') {\n            self.name = '';\n            return self;\n        } else {\n            self.name = name;\n            return self;\n        }\n    };\n\n\n    if (self.rnaLength > 0)\n        self.recalculateElements();\n\n    self.getNodeFromNucleotides = function(nucs) {\n        /* Get a node given a nucleotide number or an array of nucleotide\n         * numbers indicating an element node */\n        if (Object.prototype.toString.call(nucs) === '[object Array]') {\n            for (let j = 0; j < self.nodes.length; j++) {\n                if ('nucs' in self.nodes[j]) {\n                    if (self.nodes[j].nucs.equals(nucs)) {\n                        return self.nodes[j];\n                    }\n                }\n            }\n        } else {\n            for (let j = 0; j < self.nodes.length; j++) {\n                if (self.nodes[j].num == nucs) {\n                    return self.nodes[j];\n                }\n            }\n        }\n\n        console.log('ERROR: No node found for nucs:', nucs);\n        return null;\n    }\n}\n\nexport function moleculesToJson(moleculesJson) {\n    /* Convert a list of RNA and protein molecules to a list of RNAGraph\n     * ProteinGraph and extraLinks structure */\n\n    var nodes = {}; //index the nodes by uid\n    var graphs = [];\n    var extraLinks = [];\n\n\n    // Create the graphs for each molecule\n    for (var i = 0; i < moleculesJson.molecules.length; i++) {\n        var molecule = moleculesJson.molecules[i];\n        var rg;\n\n        if (molecule.type == 'rna') {\n            rg = new RNAGraph(molecule.seq, molecule.ss, molecule.header);\n            rg.circularizeExternal = true;\n            rg.elementsToJson()\n            .addPositions('nucleotide', molecule.positions)\n            .addLabels()\n            .reinforceStems()\n            .reinforceLoops();\n\n\n        } else if (molecule.type == 'protein') {\n            rg = new ProteinGraph(molecule.header, molecule.size);\n\n        }\n\n        rg.addUids(molecule.uids);\n\n        for (var j = 0; j < rg.nodes.length; j++) {\n            nodes[rg.nodes[j].uid] = rg.nodes[j];\n        }\n\n        graphs.push(rg);\n    }\n\n    //Add the extra links\n    for (var i = 0; i < moleculesJson.extraLinks.length; i++) {\n        link = moleculesJson.extraLinks[i];\n\n        link.source = nodes[link.source];\n        link.target = nodes[link.target];\n        link.uid = slugid.nice();\n\n        extraLinks.push(link);\n    }\n\n    return {'graphs': graphs, 'extraLinks': extraLinks};\n};\n","export function simpleXyCoordinates (pair_table) {\n  var INIT_ANGLE=0.;     /* initial bending angle */\n  var INIT_X = 100.;     /* coordinate of first digit */\n  var INIT_Y = 100.;     /* see above */\n  var RADIUS =  15.;\n\n  var x = [], y = [];\n\n  var i, len;\n  var  alpha;\n\n  len = pair_table[0];\n  var angle = Array.apply(null, new Array(len+5)).map(Number.prototype.valueOf,0); \n  var loop_size = Array.apply(null, new Array(16+Math.floor(len/5)))\n                    .map(Number.prototype.valueOf, 0); \n  var stack_size = Array.apply(null, new Array(16+Math.floor(len/5)))\n                    .map(Number.prototype.valueOf, 0); \n\n  var lp = 0;\n  var stk = 0;\n  var PIHALF = Math.PI / 2;\n\n\n  var loop = function(i, j, pair_table)\n  /* i, j are the positions AFTER the last pair of a stack; i.e\n     i-1 and j+1 are paired. */\n  {\n      var count = 2;   /* counts the VERTICES of a loop polygon; that's\n                          NOT necessarily the number of unpaired bases!\n                          Upon entry the loop has already 2 vertices, namely\n                          the pair i-1/j+1.  */\n\n  var    r = 0, bubble = 0; /* bubble counts the unpaired digits in loops */\n\n  var    i_old, partner, k, l, start_k, start_l, fill, ladder;\n  var    begin, v, diff;\n  var  polygon;\n\n  var remember = Array.apply(null, new Array((3+Math.floor((j-i)/5)*2))).map(Number.prototype.valueOf, 0);\n\n  i_old = i-1, j++;         /* j has now been set to the partner of the\n                               previous pair for correct while-loop\n                               termination.  */\n  while (i != j) {\n      partner = pair_table[i];\n      if ((!partner) || (i==0))\n          i++, count++, bubble++;\n      else {\n          count += 2;\n          k = i, l = partner;    /* beginning of stack */\n          remember[++r] = k;\n          remember[++r] = l;\n          i = partner+1;         /* next i for the current loop */\n\n          start_k = k, start_l = l;\n          ladder = 0;\n          do {\n              k++, l--, ladder++;        /* go along the stack region */\n          }\n          while ((pair_table[k] == l) && (pair_table[k] > k));\n\n          fill = ladder-2;\n          if (ladder >= 2) {\n              angle[start_k+1+fill] += PIHALF;   /*  Loop entries and    */\n              angle[start_l-1-fill] += PIHALF;   /*  exits get an        */\n              angle[start_k]        += PIHALF;   /*  additional PI/2.    */\n              angle[start_l]        += PIHALF;   /*  Why ? (exercise)    */\n              if (ladder > 2) {\n                  for (; fill >= 1; fill--) {\n                      angle[start_k+fill] = Math.PI;    /*  fill in the angles  */\n                      angle[start_l-fill] = Math.PI;    /*  for the backbone    */\n                  }\n              }\n          }\n          stack_size[++stk] = ladder;\n          if (k <= l)\n            loop(k, l, pair_table);\n      }\n  }\n\n  polygon = Math.PI*(count-2)/count; /* bending angle in loop polygon */\n  remember[++r] = j;\n  begin = i_old < 0 ? 0 : i_old;\n  for (v = 1; v <= r; v++) {\n      diff  = remember[v]-begin;\n      for (fill = 0; fill <= diff; fill++)\n      angle[begin+fill] += polygon;\n      if (v > r)\n          break;\n      begin = remember[++v];\n  }\n  loop_size[++lp] = bubble;\n  }\n\n  loop(0, len+1, pair_table);\n  loop_size[lp] -= 2;     /* correct for cheating with function loop */\n\n  alpha = INIT_ANGLE;\n  x[0]  = INIT_X;\n  y[0]  = INIT_Y;\n\n  var poss = [];\n\n  poss.push([x[0], y[0]]);\n  for (i = 1; i < len; i++) {\n      x[i] = x[i-1]+RADIUS*Math.cos(alpha);\n      y[i] = y[i-1]+RADIUS*Math.sin(alpha);\n\n      poss.push([x[i], y[i]]);\n      alpha += Math.PI-angle[i+1];\n  }\n\n  return poss;\n}\n","export function Radloop() {\n\tthis.radius = null;\n\tthis.loopnumber = null;\n\tthis.next = null;\n    this.prev = null;\n}\n\nRadloop.prototype.getRadius = function(){\n\treturn this.radius;\n}\n\nRadloop.prototype.setRadius = function(radius){\n\tthis.radius = radius;\n}\n\nRadloop.prototype.getLoopnumber = function(){\n\treturn this.loopnumber;\n}\n\nRadloop.prototype.setLoopnumber = function(loopnumber){\n\tthis.loopnumber = loopnumber;\n}\n\nRadloop.prototype.getNext = function(){\n\treturn this.next;\n}\n\nRadloop.prototype.setNext = function(next){\n\tthis.next = next;\n}\n\nRadloop.prototype.getPrev = function(){\n\treturn this.prev;\n}\n\nRadloop.prototype.setPrev = function(prev){\n\tthis.prev = prev;\n}\n","import {Region} from './region.js';\n\nexport function Base() {\n\tthis.mate = null;\n\tthis.x = null;\n    this.y = null;\n\tthis.extracted = null;\n\tthis.region = new Region();\n}\n\nBase.prototype.getMate = function(){\n\treturn this.mate;\n}\n\nBase.prototype.setMate = function(mate){\n\tthis.mate = mate;\n}\n\nBase.prototype.getX = function(){\n\treturn this.x;\n}\n\nBase.prototype.setX = function(x){\n\tthis.x = x;\n}\n\nBase.prototype.getY = function(){\n\treturn this.y;\n}\n\nBase.prototype.setY = function(y){\n\tthis.y = y;\n}\n\nBase.prototype.isExtracted = function(){\n\treturn this.extracted;\n}\n\nBase.prototype.setExtracted = function(extracted){\n\tthis.extracted = extracted;\n}\n\nBase.prototype.getRegion = function(){\n\treturn this.region;\n}\n\nBase.prototype.setRegion = function(region){\n\tthis.region = region;\n}\n","import {Radloop} from './radloop.js';\nimport {Connection} from './connection.js';\nimport {Region} from './region.js';\nimport {Base} from './base.js';\nimport {Loop} from './loop.js';\n\nexport function NAView(){\n    this.ANUM = 9999.0;\n\tthis.MAXITER = 500;\n\n\tthis.bases = [];\n\tthis.nbase = null;\n    this.nregion = null;\n    this.loop_count = null;\n\n\tthis.root = new Loop();\n\tthis.loops = [];\n\n\tthis.regions = [];\n\n\tthis.rlphead = new Radloop();\n\n\tthis.lencut = 0.8;\n\tthis.RADIUS_REDUCTION_FACTOR = 1.4;\n\n\t// show algorithm step by step\n\tthis.angleinc = null;\n\n\tthis._h = null;\n\n\t// private boolean noIterationFailureYet = true;\n\n\tthis.HELIX_FACTOR = 0.6;\n\tthis.BACKBONE_DISTANCE = 27;\n}\n\nNAView.prototype.naview_xy_coordinates = function(pair_table){\n    var x = [];\n\tvar y = [];\n    if (pair_table.length === 0 || pair_table[0] === 0){\n        return 0;\n    }\n    var i;\n    this.nbase = pair_table[0];\n    this.bases = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.bases.push(new Base());\n    }\n    this.regions = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.regions.push(new Region());\n    }\n    this.read_in_bases(pair_table);\n    this.rlphead = null;\n    this.find_regions();\n    this.loop_count = 0;\n    this.loops = [];\n    for (var index = 0; index < this.nbase + 1; index++){\n        this.loops.push(new Loop());\n    }\n    this.construct_loop(0);\n    this.find_central_loop();\n    this.traverse_loop(this.root, null);\n\n    for (i = 0; i < this.nbase; i++){\n        x.push(100 + this.BACKBONE_DISTANCE * this.bases[i + 1].getX());\n        y.push(100 + this.BACKBONE_DISTANCE * this.bases[i + 1].getY());\n    }\n\n    return {\n        nbase: this.nbase,\n        x: x,\n        y: y\n    }\n}\n\nNAView.prototype.read_in_bases = function read_in_bases(pair_table){\n    var i = null;\n    var npairs = null;\n\n    // Set up an origin.\n    this.bases.push(new Base());\n    this.bases[0].setMate(0);\n    this.bases[0].setExtracted(false);\n    this.bases[0].setX(this.ANUM);\n    this.bases[0].setY(this.ANUM);\n\n    for (npairs = 0, i = 1; i <= this.nbase; i++){\n        this.bases.push(new Base());\n        this.bases[i].setExtracted(false);\n        this.bases[i].setX(this.ANUM);\n        this.bases[i].setY(this.ANUM);\n        this.bases[i].setMate(pair_table[i]);\n        if (pair_table[i] > i)\n            npairs++;\n    }\n    // must have at least 1 pair to avoid segfault\n    if (npairs == 0){\n        this.bases[1].setMate(this.nbase);\n        this.bases[this.nbase].setMate(1);\n    }\n}\n\nNAView.prototype.find_regions = function find_regions(){\n    var i = null;\n    var mate = null;\n    var nb1 = null;\n\n    nb1 = this.nbase + 1;\n    var mark = [];\n    for (i = 0; i < nb1; i++){\n        mark.push(false);\n    }\n    this.nregion = 0;\n    for (i = 0; i <= this.nbase; i++) {\n        if ((mate = this.bases[i].getMate()) != 0 && !mark[i]) {\n            this.regions[this.nregion].setStart1(i);\n            this.regions[this.nregion].setEnd2(mate);\n            mark[i] = true;\n            mark[mate] = true;\n            this.bases[i].setRegion(this.regions[this.nregion]);\n            this.bases[mate].setRegion(this.regions[this.nregion]);\n            for (i++, mate--; i < mate && this.bases[i].getMate() == mate; i++, mate--) {\n                mark[mate] = true;\n                mark[i]= true;\n                this.bases[i].setRegion(this.regions[this.nregion]);\n                this.bases[mate].setRegion(this.regions[this.nregion]);\n            }\n            this.regions[this.nregion].setEnd1(--i);\n            this.regions[this.nregion].setStart2(mate + 1);\n\n            this.nregion++;\n        }\n    }\n}\n\nNAView.prototype.construct_loop = function construct_loop(ibase){\n    var i = null;\n    var mate = null;\n    var retloop = new Loop();\n    var lp = new Loop();\n    var cp = new Connection();\n    var rp = new Region();\n    var rlp = new Radloop();\n    retloop = this.loops[this.loop_count++];\n    retloop.setNconnection(0);\n    retloop.setDepth(0);\n    retloop.setNumber(this.loop_count);\n    retloop.setRadius(0.0);\n\n    for (rlp = this.rlphead; rlp != null; rlp = rlp.getNext())\n        if (rlp.getLoopnumber() == this.loop_count)\n            retloop.setRadius(rlp.getRadius());\n    i = ibase;\n    do {\n        if ((mate = this.bases[i].getMate()) != 0) {\n            rp = this.bases[i].getRegion();\n            if (!this.bases[rp.getStart1()].isExtracted()) {\n                if (i == rp.getStart1()) {\n                    this.bases[rp.getStart1()].setExtracted(true);\n                    this.bases[rp.getEnd1()].setExtracted(true);\n                    this.bases[rp.getStart2()].setExtracted(true);\n                    this.bases[rp.getEnd2()].setExtracted(true);\n                    lp = this.construct_loop(rp.getEnd1() < this.nbase ? rp.getEnd1() + 1\n                            : 0);\n                } else if (i == rp.getStart2()) {\n                    this.bases[rp.getStart2()].setExtracted(true);\n                    this.bases[rp.getEnd2()].setExtracted(true);\n                    this.bases[rp.getStart1()].setExtracted(true);\n                    this.bases[rp.getEnd1()].setExtracted(true);\n                    lp = this.construct_loop(rp.getEnd2() < this.nbase ? rp.getEnd2() + 1\n                            : 0);\n                } else {\n                    console.log(\"Something went terribly wrong ....\");\n                }\n                retloop.setNconnection(retloop.getNconnection() + 1);\n                cp = new Connection();\n                retloop.setConnection(retloop.getNconnection() - 1,\tcp);\n                retloop.setConnection(retloop.getNconnection(), null);\n                cp.setLoop(lp);\n                cp.setRegion(rp);\n                if(i == rp.getStart1()) {\n                    cp.setStart(rp.getStart1());\n                    cp.setEnd(rp.getEnd2());\n                } else {\n                    cp.setStart(rp.getStart2());\n                    cp.setEnd(rp.getEnd1());\n                }\n                cp.setExtruded(false);\n                cp.setBroken(false);\n                lp.setNconnection(lp.getNconnection() + 1);\n                cp = new Connection();\n                lp.setConnection(lp.getNconnection() - 1, cp);\n                lp.setConnection(lp.getNconnection(), null);\n                cp.setLoop(retloop);\n                cp.setRegion(rp);\n                if (i == rp.getStart1()) {\n                    cp.setStart(rp.getStart2());\n                    cp.setEnd(rp.getEnd1());\n                } else {\n                    cp.setStart(rp.getStart1());\n                    cp.setEnd(rp.getEnd2());\n                }\n                cp.setExtruded(false);\n                cp.setBroken(false);\n            }\n            i = mate;\n        }\n        if (++i > this.nbase)\n            i = 0;\n    } while (i != ibase);\n    return retloop;\n}\n\nNAView.prototype.find_central_loop = function find_central_loop(){\n    var lp = new Loop();\n    var maxconn = null;\n    var maxdepth = null;\n    var i = null;\n\n    determine_depths.bind(this)();\n    maxconn = 0;\n    maxdepth = -1;\n    for (i = 0; i < this.loop_count; i++) {\n        lp = this.loops[i];\n        if (lp.getNconnection() > maxconn) {\n            maxdepth = lp.getDepth();\n            maxconn = lp.getNconnection();\n            this.root = lp;\n        } else if (lp.getDepth() > maxdepth\n                && lp.getNconnection() == maxconn) {\n            maxdepth = lp.getDepth();\n            this.root = lp;\n        }\n    }\n}\n\nfunction determine_depths() {\n    var lp = new Loop();\n    var i = null;\n    var j = null;\n\n    for (i = 0; i < this.loop_count; i++) {\n        lp = this.loops[i];\n        for (j = 0; j < this.loop_count; j++){\n            this.loops[j].setMark(false);\n        }\n        lp.setDepth(depth(lp));\n    }\n}\n\nfunction depth(lp){\n    var count = null;\n    var ret = null;\n    var d = null;\n\n    if (lp.getNconnection() <= 1){\n        return 0;\n    }\n    if (lp.isMark()){\n        return -1;\n    }\n    lp.setMark(true);\n    count = 0;\n    ret = 0;\n    for (var i = 0; lp.getConnection(i) != null; i++) {\n        d = depth(lp.getConnection(i).getLoop());\n        if (d >= 0) {\n            if (++count == 1){\n                ret = d;\n            }\n            else if (ret > d){\n                ret = d;\n            }\n        }\n    }\n    lp.setMark(false);\n    return ret + 1;\n}\n\nNAView.prototype.traverse_loop = function traverse_loop(lp, anchor_connection){\n    var xs, ys, xe, ye, xn, yn, angleinc, r;\n    var radius, xc, yc, xo, yo, astart, aend, a;\n    var cp, cpnext, acp, cpprev;\n    var i, j, n, ic;\n    var da, maxang;\n    var count, icstart, icend, icmiddle, icroot;\n    var done, done_all_connections, rooted;\n    var sign;\n    var midx, midy, nrx, nry, mx, my, vx, vy, dotmv, nmidx, nmidy;\n    var icstart1, icup, icdown, icnext, direction;\n    var dan, dx, dy, rr;\n    var cpx, cpy, cpnextx, cpnexty, cnx, cny, rcn, rc, lnx, lny, rl, ac, acn, sx, sy, dcp;\n    var imaxloop = 0;\n\n    angleinc = 2 * Math.PI / (this.nbase + 1);\n    acp = null;\n    icroot = -1;\n    var indice = 0;\n\n    for (ic = 0; (cp = lp.getConnection(indice)) != null; indice++, ic++) {\n        xs = -Math.sin(angleinc * cp.getStart());\n        ys = Math.cos(angleinc * cp.getStart());\n        xe = -Math.sin(angleinc * cp.getEnd());\n        ye = Math.cos(angleinc * cp.getEnd());\n        xn = ye - ys;\n        yn = xs - xe;\n        r = Math.sqrt(xn * xn + yn * yn);\n        cp.setXrad(xn / r);\n        cp.setYrad(yn / r);\n        cp.setAngle(Math.atan2(yn, xn));\n        if (cp.getAngle() < 0.0){\n            cp.setAngle(cp.getAngle() + 2 * Math.PI);\n        }\n        if (anchor_connection != null\n                && anchor_connection.getRegion() == cp.getRegion()) {\n            acp = cp;\n            icroot = ic;\n        }\n    }\n    set_radius: while (true) {\n        this.determine_radius(lp, this.lencut);\n        radius = lp.getRadius()/this.RADIUS_REDUCTION_FACTOR;\n        if (anchor_connection == null){\n            xc = yc = 0.0;\n        }\n        else {\n            xo = (this.bases[acp.getStart()].getX() + this.bases\n                    [acp.getEnd()].getX()) / 2.0;\n            yo = (this.bases[acp.getStart()].getY() + this.bases\n                    [acp.getEnd()].getY()) / 2.0;\n            xc = xo - radius * acp.getXrad();\n            yc = yo - radius * acp.getYrad();\n        }\n\n        // The construction of the connectors will proceed in blocks of\n        // connected connectors, where a connected connector pairs means two\n        // connectors that are forced out of the drawn circle because they\n        // are too close together in angle.\n\n        // First, find the start of a block of connected connectors\n\n        if (icroot == -1){\n            icstart = 0;\n        }\n        else {\n            icstart = icroot;\n        }\n        cp = lp.getConnection(icstart);\n        count = 0;\n        done = false;\n        do {\n            j = icstart - 1;\n            if (j < 0){\n                j = lp.getNconnection() - 1;\n            }\n            cpprev = lp.getConnection(j);\n            if (!this.connected_connection(cpprev, cp)) {\n                done = true;\n            }\n            else {\n                icstart = j;\n                cp = cpprev;\n            }\n            if (++count > lp.getNconnection()) {\n                // Here everything is connected. Break on maximum angular\n                // separation between connections.\n                maxang = -1.0;\n                for (ic = 0; ic < lp.getNconnection(); ic++) {\n                    j = ic + 1;\n                    if (j >= lp.getNconnection()){\n                        j = 0;\n                    }\n                    cp = lp.getConnection(ic);\n                    cpnext = lp.getConnection(j);\n                    ac = cpnext.getAngle() - cp.getAngle();\n                    if (ac < 0.0){\n                        ac += 2 * Math.PI;\n                    }\n                    if (ac > maxang) {\n                        maxang = ac;\n                        imaxloop = ic;\n                    }\n                }\n                icend = imaxloop;\n                icstart = imaxloop + 1;\n                if (icstart >= lp.getNconnection()){\n                    icstart = 0;\n                }\n                cp = lp.getConnection(icend);\n                cp.setBroken(true);\n                done = true;\n            }\n        } while (!done);\n        done_all_connections = false;\n        icstart1 = icstart;\n        while (!done_all_connections) {\n            count = 0;\n            done = false;\n            icend = icstart;\n            rooted = false;\n            while (!done) {\n                cp = lp.getConnection(icend);\n                if (icend == icroot){\n                    rooted = true;\n                }\n                j = icend + 1;\n                if (j >= lp.getNconnection()) {\n                    j = 0;\n                }\n                cpnext = lp.getConnection(j);\n                if (this.connected_connection(cp, cpnext)) {\n                    if (++count >= lp.getNconnection()){\n                        break;\n                    }\n                    icend = j;\n                }\n                else {\n                    done = true;\n                }\n            }\n            icmiddle = this.find_ic_middle(icstart, icend, anchor_connection,\n                    acp, lp);\n            ic = icup = icdown = icmiddle;\n            done = false;\n            direction = 0;\n            while (!done) {\n                if (direction < 0) {\n                    ic = icup;\n                }\n                else if (direction == 0) {\n                    ic = icmiddle;\n                }\n                else {\n                    ic = icdown;\n                }\n                if (ic >= 0) {\n                    cp = lp.getConnection(ic);\n                    if (anchor_connection == null || acp != cp) {\n                        if (direction == 0) {\n                            astart = cp.getAngle()\n                                    - Math.asin(1.0 / 2.0 / radius);\n                            aend = cp.getAngle()\n                                    + Math.asin(1.0 / 2.0 / radius);\n                            this.bases[cp.getStart()].setX(\n                                    xc + radius * Math.cos(astart));\n                            this.bases[cp.getStart()].setY(\n                                    yc + radius * Math.sin(astart));\n                            this.bases[cp.getEnd()].setX(\n                                    xc + radius * Math.cos(aend));\n                            this.bases[cp.getEnd()].setY(\n                                    yc + radius * Math.sin(aend));\n                        }\n                        else if (direction < 0) {\n                            j = ic + 1;\n                            if (j >= lp.getNconnection()){\n                                j = 0;\n                            }\n                            cp = lp.getConnection(ic);\n                            cpnext = lp.getConnection(j);\n                            cpx = cp.getXrad();\n                            cpy = cp.getYrad();\n                            ac = (cp.getAngle() + cpnext.getAngle()) / 2.0;\n                            if (cp.getAngle() > cpnext.getAngle()){\n                                ac -= Math.PI;\n                            }\n                            cnx = Math.cos(ac);\n                            cny = Math.sin(ac);\n                            lnx = cny;\n                            lny = -cnx;\n                            da = cpnext.getAngle() - cp.getAngle();\n                            if (da < 0.0){\n                                da += 2 * Math.PI;\n                            }\n                            if (cp.isExtruded()) {\n                                if (da <= Math.PI / 2){\n                                    rl = 2.0;\n                                }\n                                else {\n                                    rl = 1.5;\n                                }\n                            }\n                            else {\n                                rl = 1.0;\n                            }\n                            this.bases[cp.getEnd()].setX(\n                                    this.bases[cpnext.getStart()].getX()\n                                            + rl * lnx);\n                            this.bases[cp.getEnd()].setY(\n                                    this.bases[cpnext.getStart()].getY()\n                                            + rl * lny);\n                            this.bases[cp.getStart()].setX(\n                                    this.bases[cp.getEnd()].getX() + cpy);\n                            this.bases[cp.getStart()].setY(\n                                    this.bases[cp.getEnd()].getY() - cpx);\n                        } else {\n                            j = ic - 1;\n                            if (j < 0){\n                                j = lp.getNconnection() - 1;\n                            }\n                            cp = lp.getConnection(j);\n                            cpnext = lp.getConnection(ic);\n                            cpnextx = cpnext.getXrad();\n                            cpnexty = cpnext.getYrad();\n                            ac = (cp.getAngle() + cpnext.getAngle()) / 2.0;\n                            if (cp.getAngle() > cpnext.getAngle()){\n                                ac -= Math.PI;\n                            }\n                            cnx = Math.cos(ac);\n                            cny = Math.sin(ac);\n                            lnx = -cny;\n                            lny = cnx;\n                            da = cpnext.getAngle() - cp.getAngle();\n                            if (da < 0.0){\n                                da += 2 * Math.PI;\n                            }\n                            if (cp.isExtruded()) {\n                                if (da <= Math.PI / 2){\n                                    rl = 2.0;\n                                }\n                                else {\n                                    rl = 1.5;\n                                }\n                            }\n                            else {\n                                rl = 1.0;\n                            }\n                            this.bases[cpnext.getStart()].setX(\n                                    this.bases[cp.getEnd()].getX() + rl\n                                            * lnx);\n                            this.bases[cpnext.getStart()].setY(\n                                    this.bases[cp.getEnd()].getY() + rl\n                                            * lny);\n                            this.bases[cpnext.getEnd()].setX(\n                                    this.bases[cpnext.getStart()].getX()\n                                            - cpnexty);\n                            this.bases[cpnext.getEnd()].setY(\n                                    this.bases[cpnext.getStart()].getY()\n                                            + cpnextx);\n                        }\n                    }\n                }\n                if (direction < 0) {\n                    if (icdown == icend) {\n                        icdown = -1;\n                    }\n                    else if (icdown >= 0) {\n                        if (++icdown >= lp.getNconnection()) {\n                            icdown = 0;\n                        }\n                    }\n                    direction = 1;\n                }\n                else {\n                    if (icup == icstart){\n                        icup = -1;\n                    }\n                    else if (icup >= 0) {\n                        if (--icup < 0) {\n                            icup = lp.getNconnection() - 1;\n                        }\n                    }\n                    direction = -1;\n                }\n                done = icup == -1 && icdown == -1;\n            }\n            icnext = icend + 1;\n            if (icnext >= lp.getNconnection()){\n                icnext = 0;\n            }\n            if (icend != icstart\n                    && (!(icstart == icstart1 && icnext == icstart1))) {\n\n                // Move the bases just constructed (or the radius) so that\n                // the bisector of the end points is radius distance away\n                // from the loop center.\n\n                cp = lp.getConnection(icstart);\n                cpnext = lp.getConnection(icend);\n                dx = this.bases[cpnext.getEnd()].getX()\n                        - this.bases[cp.getStart()].getX();\n                dy = this.bases[cpnext.getEnd()].getY()\n                        - this.bases[cp.getStart()].getY();\n                midx = this.bases[cp.getStart()].getX() + dx / 2.0;\n                midy = this.bases[cp.getStart()].getY() + dy / 2.0;\n                rr = Math.sqrt(dx * dx + dy * dy);\n                mx = dx / rr;\n                my = dy / rr;\n                vx = xc - midx;\n                vy = yc - midy;\n                rr = Math.sqrt(dx * dx + dy * dy);\n                vx /= rr;\n                vy /= rr;\n                dotmv = vx * mx + vy * my;\n                nrx = dotmv * mx - vx;\n                nry = dotmv * my - vy;\n                rr = Math.sqrt(nrx * nrx + nry * nry);\n                nrx /= rr;\n                nry /= rr;\n\n                // Determine which side of the bisector the center should\n                // be.\n\n                dx = this.bases[cp.getStart()].getX() - xc;\n                dy = this.bases[cp.getStart()].getY() - yc;\n                ac = Math.atan2(dy, dx);\n                if (ac < 0.0){\n                    ac += 2 * Math.PI;\n                }\n                dx = this.bases[cpnext.getEnd()].getX() - xc;\n                dy = this.bases[cpnext.getEnd()].getY() - yc;\n                acn = Math.atan2(dy, dx);\n                if (acn < 0.0){\n                    acn += 2 * Math.PI;\n                }\n                if (acn < ac){\n                    acn += 2 * Math.PI;\n                }\n                if (acn - ac > Math.PI){\n                    sign = -1;\n                }\n                else {\n                    sign = 1;\n                }\n                nmidx = xc + sign * radius * nrx;\n                nmidy = yc + sign * radius * nry;\n                if (rooted) {\n                    xc -= nmidx - midx;\n                    yc -= nmidy - midy;\n                }\n                else {\n                    for (ic = icstart;;) {\n                        cp = lp.getConnection(ic);\n                        i = cp.getStart();\n                        this.bases[i].setX(\n                                this.bases[i].getX() + nmidx - midx);\n                        this.bases[i].setY(\n                                this.bases[i].getY() + nmidy - midy);\n                        i = cp.getEnd();\n                        this.bases[i].setX(\n                                this.bases[i].getX() + nmidx - midx);\n                        this.bases[i].setY(\n                                this.bases[i].getY() + nmidy - midy);\n                        if (ic == icend){\n                            break;\n                        }\n                        if (++ic >= lp.getNconnection()){\n                            ic = 0;\n                        }\n                    }\n                }\n            }\n            icstart = icnext;\n            done_all_connections = icstart == icstart1;\n        }\n        for (ic = 0; ic < lp.getNconnection(); ic++) {\n            cp = lp.getConnection(ic);\n            j = ic + 1;\n            if (j >= lp.getNconnection()){\n                j = 0;\n            }\n            cpnext = lp.getConnection(j);\n            dx = this.bases[cp.getEnd()].getX() - xc;\n            dy = this.bases[cp.getEnd()].getY() - yc;\n            rc = Math.sqrt(dx * dx + dy * dy);\n            ac = Math.atan2(dy, dx);\n            if (ac < 0.0){\n                ac += 2 * Math.PI;\n            }\n            dx = this.bases[cpnext.getStart()].getX() - xc;\n            dy = this.bases[cpnext.getStart()].getY() - yc;\n            rcn = Math.sqrt(dx * dx + dy * dy);\n            acn = Math.atan2(dy, dx);\n            if (acn < 0.0){\n                acn += 2 * Math.PI;\n            }\n            if (acn < ac){\n                acn += 2 * Math.PI;\n            }\n            dan = acn - ac;\n            dcp = cpnext.getAngle() - cp.getAngle();\n            if (dcp <= 0.0){\n                dcp += 2 * Math.PI;\n            }\n            if (Math.abs(dan - dcp) > Math.PI) {\n                if (cp.isExtruded()) {\n                    console.log(\"Warning from traverse_loop. Loop \"\n                            + lp.getNumber() + \" has crossed regions\\n\");\n                }\n                else if ((cpnext.getStart() - cp.getEnd()) != 1) {\n                    cp.setExtruded(true);\n                    continue set_radius; // remplacement du goto\n                }\n            }\n            if (cp.isExtruded()) {\n                this.construct_extruded_segment(cp, cpnext);\n            }\n            else {\n                n = cpnext.getStart() - cp.getEnd();\n                if (n < 0){\n                    n += this.nbase + 1;\n                }\n                angleinc = dan / n;\n                for (j = 1; j < n; j++) {\n                    i = cp.getEnd() + j;\n                    if (i > this.nbase){\n                        i -= this.nbase + 1;\n                    }\n                    a = ac + j * angleinc;\n                    rr = rc + (rcn - rc) * (a - ac) / dan;\n                    this.bases[i].setX(xc + rr * Math.cos(a));\n                    this.bases[i].setY(yc + rr * Math.sin(a));\n                }\n            }\n        }\n        break;\n    }\n    for (ic = 0; ic < lp.getNconnection(); ic++) {\n        if (icroot != ic) {\n            cp = lp.getConnection(ic);\n            //IM HERE\n            this.generate_region(cp);\n            this.traverse_loop(cp.getLoop(), cp);\n        }\n    }\n    n = 0;\n    sx = 0.0;\n    sy = 0.0;\n    for (ic = 0; ic < lp.getNconnection(); ic++) {\n        j = ic + 1;\n        if (j >= lp.getNconnection()){\n            j = 0;\n        }\n        cp = lp.getConnection(ic);\n        cpnext = lp.getConnection(j);\n        n += 2;\n        sx += this.bases[cp.getStart()].getX()\n                + this.bases[cp.getEnd()].getX();\n        sy += this.bases[cp.getStart()].getY()\n                + this.bases[cp.getEnd()].getY();\n        if (!cp.isExtruded()) {\n            for (j = cp.getEnd() + 1; j != cpnext.getStart(); j++) {\n                if (j > this.nbase){\n                    j -= this.nbase + 1;\n                }\n                n++;\n                sx += this.bases[j].getX();\n                sy += this.bases[j].getY();\n            }\n        }\n    }\n    lp.setX(sx / n);\n    lp.setY(sy / n);\n}\n\nNAView.prototype.determine_radius = function determine_radius(lp, lencut){\n    var mindit, ci, dt, sumn, sumd, radius, dit;\n    var i, j, end, start, imindit = 0;\n    var cp = new Connection(), cpnext = new Connection();\n    var rt2_2 = 0.7071068;\n\n    do {\n        mindit = 1.0e10;\n        for (sumd = 0.0, sumn = 0.0, i = 0; i < lp.getNconnection(); i++) {\n            cp = lp.getConnection(i);\n            j = i + 1;\n            if (j >= lp.getNconnection()){\n                j = 0;\n            }\n            cpnext = lp.getConnection(j);\n            end = cp.getEnd();\n            start = cpnext.getStart();\n            if (start < end){\n                start += this.nbase + 1;\n            }\n            dt = cpnext.getAngle() - cp.getAngle();\n            if (dt <= 0.0){\n                dt += 2 * Math.PI;\n            }\n            if (!cp.isExtruded()){\n                ci = start - end;\n            }\n            else {\n                if (dt <= Math.PI / 2){\n                    ci = 2.0;\n                }\n                else {\n                    ci = 1.5;\n                }\n            }\n            sumn += dt * (1.0 / ci + 1.0);\n            sumd += dt * dt / ci;\n            dit = dt / ci;\n            if (dit < mindit && !cp.isExtruded() && ci > 1.0) {\n                mindit = dit;\n                imindit = i;\n            }\n        }\n        radius = sumn / sumd;\n        if (radius < rt2_2){\n            radius = rt2_2;\n        }\n        if (mindit * radius < lencut) {\n            lp.getConnection(imindit).setExtruded(true);\n        }\n    } while (mindit * radius < lencut);\n    if (lp.getRadius() > 0.0){\n        radius = lp.getRadius();\n    }\n    else {\n        lp.setRadius(radius);\n    }\n}\n\nNAView.prototype.find_ic_middle = function find_ic_middle(icstart, icend, anchor_connection, acp, lp){\n    var count, ret, ic, i;\n    var done;\n\n    count = 0;\n    ret = -1;\n    ic = icstart;\n    done = false;\n    while (!done) {\n        if (count++ > lp.getNconnection() * 2) {\n            console.log(\"Infinite loop in 'find_ic_middle'\");\n        }\n        if (anchor_connection != null && lp.getConnection(ic) == acp) {\n            ret = ic;\n        }\n        done = ic == icend;\n        if (++ic >= lp.getNconnection()) {\n            ic = 0;\n        }\n    }\n    if (ret == -1) {\n        for (i = 1, ic = icstart; i < (count + 1) / 2; i++) {\n            if (++ic >= lp.getNconnection())\n                ic = 0;\n        }\n        ret = ic;\n    }\n    return ret;\n}\n\nNAView.prototype.construct_extruded_segment = function construct_extruded_segment(cp, cpnext){\n    var astart, aend1, aend2, aave, dx, dy, a1, a2, ac, rr, da, dac;\n    var start, end, n, nstart, nend;\n    var collision;\n\n    astart = cp.getAngle();\n    aend2 = aend1 = cpnext.getAngle();\n    if (aend2 < astart){\n        aend2 += 2 * Math.PI;\n    }\n    aave = (astart + aend2) / 2.0;\n    start = cp.getEnd();\n    end = cpnext.getStart();\n    n = end - start;\n    if (n < 0){\n        n += this.nbase + 1;\n    }\n    da = cpnext.getAngle() - cp.getAngle();\n    if (da < 0.0) {\n        da += 2 * Math.PI;\n    }\n    if (n == 2) {\n        this.construct_circle_segment(start, end);\n    }\n    else {\n        dx = this.bases[end].getX() - this.bases[start].getX();\n        dy = this.bases[end].getY() - this.bases[start].getY();\n        rr = Math.sqrt(dx * dx + dy * dy);\n        dx /= rr;\n        dy /= rr;\n        if (rr >= 1.5 && da <= Math.PI / 2) {\n            nstart = start + 1;\n            if (nstart > this.nbase){\n                nstart -= this.nbase + 1;\n            }\n            nend = end - 1;\n            if (nend < 0){\n                nend += this.nbase + 1;\n            }\n            this.bases[nstart].setX(this.bases[start].getX() + 0.5 * dx);\n            this.bases[nstart].setY(this.bases[start].getY() + 0.5 * dy);\n            this.bases[nend].setX(this.bases[end].getX() - 0.5 * dx);\n            this.bases[nend].setY(this.bases[end].getY() - 0.5 * dy);\n            start = nstart;\n            end = nend;\n        }\n        do {\n            collision = false;\n            this.construct_circle_segment(start, end);\n            nstart = start + 1;\n            if (nstart > this.nbase) {\n                nstart -= this.nbase + 1;\n            }\n            dx = this.bases[nstart].getX() - this.bases[start].getX();\n            dy = this.bases[nstart].getY() - this.bases[start].getY();\n            a1 = Math.atan2(dy, dx);\n            if (a1 < 0.0){\n                a1 += 2 * Math.PI;\n            }\n            dac = a1 - astart;\n            if (dac < 0.0){\n                dac += 2 * Math.PI;\n            }\n            if (dac > Math.PI){\n                collision = true;\n            }\n            nend = end - 1;\n            if (nend < 0){\n                nend += this.nbase + 1;\n            }\n            dx = this.bases[nend].getX() - this.bases[end].getX();\n            dy = this.bases[nend].getY() - this.bases[end].getY();\n            a2 = Math.atan2(dy, dx);\n            if (a2 < 0.0){\n                a2 += 2 * Math.PI;\n            }\n            dac = aend1 - a2;\n            if (dac < 0.0){\n                dac += 2 * Math.PI;\n            }\n            if (dac > Math.PI){\n                collision = true;\n            }\n            if (collision) {\n                ac = this.minf2(aave, astart + 0.5);\n                this.bases[nstart].setX(\n                        this.bases[start].getX() + Math.cos(ac));\n                this.bases[nstart].setY(\n                        this.bases[start].getY() + Math.sin(ac));\n                start = nstart;\n                ac = this.maxf2(aave, aend2 - 0.5);\n                this.bases[nend].setX(this.bases[end].getX() + Math.cos(ac));\n                this.bases[nend].setY(this.bases[end].getY() + Math.sin(ac));\n                end = nend;\n                n -= 2;\n            }\n        } while (collision && n > 1);\n    }\n}\n\nNAView.prototype.construct_circle_segment = function construct_circle_segment(start, end){\n    var dx, dy, rr, midx, midy, xn, yn, nrx, nry, mx, my, a;\n    var l, j, i;\n\n    dx = this.bases[end].getX() - this.bases[start].getX();\n    dy = this.bases[end].getY() - this.bases[start].getY();\n    rr = Math.sqrt(dx * dx + dy * dy);\n    l = end - start;\n    if (l < 0){\n        l += this.nbase + 1;\n    }\n    if (rr >= l) {\n        dx /= rr;\n        dy /= rr;\n        for (j = 1; j < l; j++) {\n            i = start + j;\n            if (i > this.nbase){\n                i -= this.nbase + 1;\n            }\n            this.bases[i].setX(\n                    this.bases[start].getX() + dx * j / l);\n            this.bases[i].setY(\n                    this.bases[start].getY() + dy * j / l);\n        }\n    }\n    else {\n        this.find_center_for_arc((l - 1), rr);\n        dx /= rr;\n        dy /= rr;\n        midx = this.bases[start].getX() + dx * rr / 2.0;\n        midy = this.bases[start].getY() + dy * rr / 2.0;\n        xn = dy;\n        yn = -dx;\n        nrx = midx + this._h * xn;\n        nry = midy + this._h * yn;\n        mx = this.bases[start].getX() - nrx;\n        my = this.bases[start].getY() - nry;\n        rr = Math.sqrt(mx * mx + my * my);\n        a = Math.atan2(my, mx);\n        for (j = 1; j < l; j++) {\n            i = start + j;\n            if (i > this.nbase){\n                i -= this.nbase + 1;\n            }\n            this.bases[i].setX(nrx + rr * Math.cos(a + j * this.angleinc));\n            this.bases[i].setY(nry + rr * Math.sin(a + j * this.angleinc));\n        }\n    }\n}\n\nNAView.prototype.find_center_for_arc = function find_center_for_arc(n, b){\n    var h, hhi, hlow, r, disc, theta, e, phi;\n    var iter;\n\n    hhi = (n + 1.0) / Math.PI;\n    // changed to prevent div by zero if (ih)\n    hlow = -hhi - b / (n + 1.000001 - b);\n    if (b < 1){\n        // otherwise we might fail below (ih)\n        hlow = 0;\n    }\n    iter = 0;\n    do {\n        h = (hhi + hlow) / 2.0;\n        r = Math.sqrt(h * h + b * b / 4.0);\n        disc = 1.0 - 0.5 / (r * r);\n        if (Math.abs(disc) > 1.0) {\n            console.log(\"Unexpected large magnitude discriminant = \" + disc\n                            + \" \" + r);\n        }\n        theta = Math.acos(disc);\n        phi = Math.acos(h / r);\n        e = theta * (n + 1) + 2 * phi - 2 * Math.PI;\n        if (e > 0.0) {\n            hlow = h;\n        }\n        else {\n            hhi = h;\n        }\n    } while (Math.abs(e) > 0.0001 && ++iter < this.MAXITER);\n    if (iter >= this.MAXITER) {\n        if (noIterationFailureYet) {\n            console.log(\"Iteration failed in find_center_for_arc\");\n            noIterationFailureYet = false;\n        }\n        h = 0.0;\n        theta = 0.0;\n    }\n    this._h = h;\n    this.angleinc = theta;\n}\n\nNAView.prototype.generate_region = function generate_region(cp){\n    var l, start, end, i, mate;\n    var rp;\n\n    rp = cp.getRegion();\n    l = 0;\n    if (cp.getStart() == rp.getStart1()) {\n        start = rp.getStart1();\n        end = rp.getEnd1();\n    }\n    else {\n        start = rp.getStart2();\n        end = rp.getEnd2();\n    }\n    if (this.bases[cp.getStart()].getX() > this.ANUM - 100.0\n            || this.bases[cp.getEnd()].getX() > this.ANUM - 100.0) {\n        console.log(\n                \"Bad region passed to generate_region. Coordinates not defined.\");\n    }\n    for (i = start + 1; i <= end; i++) {\n        l++;\n        this.bases[i].setX(\n                this.bases[cp.getStart()].getX() + this.HELIX_FACTOR * l\n                        * cp.getXrad());\n        this.bases[i].setY(\n                this.bases[cp.getStart()].getY() + this.HELIX_FACTOR * l\n                        * cp.getYrad());\n        mate = this.bases[i].getMate();\n        this.bases[mate].setX(\n                this.bases[cp.getEnd()].getX() + this.HELIX_FACTOR * l\n                        * cp.getXrad());\n        this.bases[mate].setY(\n                this.bases[cp.getEnd()].getY() + this.HELIX_FACTOR * l\n                        * cp.getYrad());\n\n    }\n}\n\nNAView.prototype.minf2 = function minf2(x1, x2) {\n    return ((x1) < (x2)) ? (x1) : (x2);\n}\n\nNAView.prototype.maxf2 = function maxf2(x1, x2) {\n    return ((x1) > (x2)) ? (x1) : (x2);\n}\n\nNAView.prototype.connected_connection = function connected_connection(cp, cpnext) {\n    if (cp.isExtruded()) {\n        return true;\n    }\n    else if (cp.getEnd() + 1 == cpnext.getStart()) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/* Version: 0.2\n* Date: 2015-03-15\n*/\n\nimport fstyle from './fornac.css';\n\nimport d3 from 'd3';\nimport slugid from 'slugid';\nimport {contextMenu} from './d3-context-menu.js';\n\nimport {RNAGraph} from './rnagraph.js';\nimport {ColorScheme, rnaUtilities} from './rnautils.js';\n\nimport {simpleXyCoordinates} from './simplernaplot.js';\nimport {NAView} from './naview/naview.js';\n\nexport function FornaContainer(element, passedOptions = {}) {\n    var self = this;\n\n    let options = {\n        'editable': false,\n        'zoomable': true,\n        'animation': true,\n        'displayAllLinks': false,\n        'labelInterval': 10,\n        'chargeDistance': 110,\n        'friction': 0.35,\n        'middleCharge': -30,\n        'otherCharge': -30,\n        'linkDistanceMultiplier': 15,\n        'initialSize': null,\n        'layout': 'standard-polygonal',\n        'transitionDuration': 500,\n        'maxNodeRadius': 80    // the maximum radius of a node when the view is centered\n    };\n\n    self.options = Object.assign(options, passedOptions);\n\n    if (self.options.initialSize !== null) {\n        self.options.svgW = self.options.initialSize[0];\n        self.options.svgH = self.options.initialSize[1];\n    } else {\n        self.options.svgW = 300;\n        self.options.svgH = 300;\n    }\n    \n    self.linkStrengths = {\n        'pseudoknot': 0.00,\n        'proteinChain': 0.00,\n        'chainChain': 0.00,\n        'intermolecule': 10.00,\n        'external': 0.00,\n        'other': 10.00\n    };\n\n    self.displayParameters = {\n        'displayNumbering': true,\n        'displayNodeOutline': true,\n        'displayNodeLabel': true,\n        'displayLinks': true,\n        'displayPseudoknotLinks': true,\n        'displayProteinLinks': true,\n        'displayDirectionArrows': true\n    };\n\n    self.colorScheme = 'structure';\n    self.customColors = {};\n    self.rnas = {};\n    self.extraLinks = []; //store links between different RNAs\n\n    // global mouse event vars\n    var mousedownLink = null,\n        mousedownNode = null,\n        mouseupNode = null;\n    let linkContextMenuShown = false;\n\n    let resetMouseVars = () => {\n        mousedownNode = null;\n        mouseupNode = null;\n        mousedownLink = null;\n    }\n\n    var graph = self.graph = {\n        'nodes':[],\n        'links':[]\n    };\n\n    Array.prototype.equals = function (array) {\n        // if the other array is a falsy value, return\n        if (!array)\n            return false;\n\n        // compare lengths - can save a lot of time\n        if (this.length != array.length)\n            return false;\n\n        for (var i = 0, l=this.length; i < l; i++) {\n            // Check if we have nested arrays\n            if (this[i] instanceof Array && array[i] instanceof Array) {\n                // recurse into the nested arrays\n                if (!this[i].equals(array[i]))\n                    return false;\n            }\n            else if (this[i] != array[i]) {\n                // Warning - two different object instances will never be equal: {x:20} != {x:20}\n                return false;\n            }\n        }\n        return true;\n    };\n    \n    /* Register global mouse and key events */\n    if (self.options.editable || self.options.animation) {\n      var shiftKeydown = false;\n      var ctrlKeydown = false;\n\n      let keydown = () => {\n          switch (d3.event.keyCode) {\n              case 68:    //'d' key\n                  console.log('dotbracket:', self.getStructuresDotBracket());\n                  break;\n              case 16:\n                  shiftKeydown = true;\n                  break;\n              case 17:\n                  ctrlKeydown = true;\n                  break;\n              case 67: //c\n                  self.centerView();\n                  break;\n          }\n\n          if (ctrlKeydown) {\n            // Ctrl key must disable panning and zooming\n            if (self.options.zoomable)\n              disableZooming()\n            // Ctrl Button must enable crosshair and start brusher\n            if (self.options.editable || self.options.animation) {\n              enableBrushing()\n            }\n          }\n      }\n\n      let keyup = () => {\n          shiftKeydown = false;\n          ctrlKeydown = false;\n          \n          // enable zoomer\n          if (self.options.zoomable)\n            enableZooming()\n          // disable brushing events\n          disableBrushing()\n      }\n\n      d3.select('body')\n      .on('keydown', keydown)\n      .on('keyup', keyup)\n      .on('contextmenu', function() {\n          d3.event.preventDefault();\n      });\n    }\n    \n    /* Register global context menu */\n    if (self.options.editable) {\n        let backgroundMenu = [\n            {\n                title: 'Add Node',\n                action: function(elm, d, i, mousePos) {\n\n                },\n                children: [{\n                    'title': 'A',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'A', 'centerPos': canvasMousePos});\n                    }\n                },\n                {\n                    'title': 'C',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'C', 'centerPos': canvasMousePos});\n                    }\n\n                    },\n                {\n                    'title': 'G',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'G', 'centerPos': canvasMousePos});\n                    }\n\n                    },\n                {\n                    'title': 'U',\n                    action: function(elm, d, i, mousePos) {\n                        console.log('mousePos:', mousePos, self.options.svgW, self.options.svgH);\n                        let canvasMousePos = [xScale.invert(mousePos[0]),\n                                              yScale.invert(mousePos[1])];\n                        console.log('canvasMousePos', canvasMousePos);\n\n                        self.addRNA('.', {'sequence': 'U', 'centerPos': canvasMousePos});\n\n                    }\n                }\n                ],\n                disabled: false // optional, defaults to false\n            }\n        ]\n\n        let nodeMenu = [\n            {\n                title: 'Delete Node',\n                action: function(elm, d, i) {\n                    deleteNode(d);\n                },\n                disabled: false // optional, defaults to false\n            },\n            {\n                title: 'Change Node',\n                action: function(elm, d, i) {\n                    console.log('You have clicked the second item!');\n                    console.log('The data for this circle is: ' + d);\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            changeNode('A', d);\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            changeNode('C', d);\n\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            changeNode('G', d);\n\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            changeNode('U', d);\n                        }\n                    },\n                ]\n            },\n            {\n                title: 'Insert Before',\n                action: function(elm, d, i) {\n\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('A', d, -1);\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('C', d, -1);\n\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('G', d, -1);\n\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('U', d, -1);\n                        }\n                    },\n                ]\n            },\n            {\n                title: 'Insert After',\n                action: function(elm, d, i) {\n                    console.log('d:', d);\n\n                },\n                children: [\n                    {\n                        title: 'A',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('A', d, 0);\n\n                        }\n                    },\n                    {\n                        title: 'C',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('C', d, 0);\n                        }\n                    },\n                    {\n                        title: 'G',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('G', d, 0);\n                        }\n                    },\n                    {\n                        title: 'U',\n                        action: function(elm, d, i) {\n                            insertNodeBeforeOrAfter('U', d, 0);\n                        }\n                    },\n                ]\n            }\n        ]\n\n        self.nodeContextMenu = contextMenu(nodeMenu);\n        self.backgroundContextMenu = contextMenu(backgroundMenu);\n\n    }  else {\n        //console.log('empty context menu');\n        self.nodeContextMenu = function() {};\n    }\n    \n    /* Draw the plot here */\n    d3.select(element).select('svg').remove();\n\n    var svg = d3.select(element)\n    .attr('tabindex', 1)\n    .each(function() { this.focus(); })\n    .append('svg:svg')\n    .attr('preserveAspectRatio', 'xMidYMid meet')\n    .attr('viewBox', '0 0 ' + self.options.svgW + ' ' + self.options.svgH)\n\n    self.options.svg = svg;\n    \n    if (self.options.editable || self.options.animation) {\n      var mouseEventHelper = svg.append('svg:g')\n      .on('mousemove', () => {\n            // only if we are dragging\n            if (!mousedownNode) return;\n\n            // update drag line\n            let mpos = d3.mouse(vis.node());\n            dragLine\n            .attr('x1', mousedownNode.x)\n            .attr('y1', mousedownNode.y)\n            .attr('x2', mpos[0])\n            .attr('y2', mpos[1]);\n          })\n      .on('mousedown', () => {\n      })\n      .on('mouseup', () => {\n            if (mousedownNode && !linkContextMenuShown) {\n                dragLine.classed(fstyle.transparent, true);\n            }\n            // clear mouse event vars\n            resetMouseVars();\n            //update()\n          })\n      .classed(fstyle.mouseEventHelper, true)\n      .style('pointer-events', 'all')\n      \n      // draw a background layer for mouse events\n      mouseEventHelper.append('svg:rect')\n      .classed('background', true)\n      .style('visibility', 'hidden')\n      .attr('width', self.options.svgW)\n      .attr('height', self.options.svgH)\n      .on('mousedown', function() { \n        //console.log('background click');\n        deselectAllNodes() \n      })\n    } else {\n      var mouseEventHelper = svg;\n    }\n\n    var vis = mouseEventHelper.append('svg:g')\n    .classed(fstyle.plot, true)\n    var visLinks = vis.append('svg:g')\n    .classed('fornac-links', true);\n    var visNodes = vis.append('svg:g')\n    .classed('fornac-nodes', true);\n    \n    // line displayed when dragging new nodes\n    if (self.options.editable) {\n      var dragLine = vis.append('line')\n      .attr('class', fstyle.dragLine)\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', 0);\n      \n      svg.on('contextmenu', self.backgroundContextMenu);\n    }\n    \n    /* Zooming related objects and functions */\n    var xScale = d3.scale.linear()\n    .domain([0,self.options.svgW]).range([0,self.options.svgW]);\n    var yScale = d3.scale.linear()\n    .domain([0,self.options.svgH]).range([0, self.options.svgH]);\n    \n    self.zoomer = d3.behavior.zoom()\n      .scaleExtent([0.1,10])\n      .x(xScale)\n      .y(yScale)\n      .on('zoom', () => {\n          vis.attr('transform',\n                   'translate(' + d3.event.translate + ')' + ' scale(' + d3.event.scale + ')');\n      });\n    \n    let enableZooming = () => {\n      svg.call(self.zoomer)\n      .on(\"dblclick.zoom\", null);\n    }\n    \n    let disableZooming = () => {\n      svg.call(self.zoomer)\n      .on(\"dblclick.zoom\", null)\n      .on('mousedown.zoom', null)\n      .on('touchstart.zoom', null)\n      .on('touchmove.zoom', null)\n      .on('touchend.zoom', null);\n    }\n    \n    if (self.options.zoomable)\n      enableZooming()\n    \n    /* Node selection related objects and functions */\n    let toggleSelectNode = (node) => {\n      node.selected = !node.selected;\n      visNodes.selectAll('g.gnode').filter((d) => { return node.uid == d.uid; })\n      .classed(fstyle.selectedNode, function(p) { return p.selected; });\n    }\n    \n    let selectNode = (node) => {\n      node.selected = true;\n      visNodes.selectAll('g.gnode').filter((d) => { return node.uid == d.uid; })\n      .classed(fstyle.selectedNode, function(p) { return p.selected; });\n    }\n    \n    let deselectAllNodes = () => {\n      visNodes.selectAll('g.gnode')\n      .classed(fstyle.selectedNode, function(p) { return p.selected = false; });\n    }\n    \n    let selectedNodes = () => {\n      // return all selected nodes\n      return visNodes.selectAll('g.gnode').filter(function(d) { return d.selected; });\n    }\n\n    self.brusher = d3.svg.brush()\n      .x(xScale)\n      .y(yScale)\n      .on('brushstart', function(d) {})\n      .on('brush', function() {\n        // during brushing invert styling of selection as preview\n        let extent = d3.event.target.extent();\n\n        visNodes.selectAll('g.gnode')\n        .classed(fstyle.selectedNode, function (d) { \n         return d.selected ^ (extent[0][0] <= d.x && d.x < extent[1][0]\n                && extent[0][1] <= d.y && d.y < extent[1][1])\n        })\n      })\n      .on('brushend', function() {\n        // after brushing finally toggle the selection\n        let extent = d3.event.target.extent();\n\n        visNodes.selectAll('g.gnode')\n        .filter(function (d) {\n         return extent[0][0] <= d.x && d.x < extent[1][0]\n                && extent[0][1] <= d.y && d.y < extent[1][1]\n      })\n      .each(toggleSelectNode)\n       \n      d3.event.target.clear();\n      d3.select(this).call(d3.event.target);\n    });\n    \n    let enableBrushing = () => {\n     // crosshair curson\n     mouseEventHelper.select('.background').style('cursor', 'crosshair');\n     // bind brusher\n     mouseEventHelper.call(self.brusher);\n    }\n\n    let disableBrushing = () => {\n     // normal cursor\n     mouseEventHelper.select('.background').style('cursor', 'auto');\n     // disable brushing events\n     mouseEventHelper.call(self.brusher)\n     .on('mousedown.brush', null)\n     .on('touchstart.brush', null)\n     .on('touchmove.brush', null)\n     .on('touchend.brush', null);\n    }\n\n     /* Force related objects and functions */\n    self.force = d3.layout.force()\n    .charge(function(d) {\n      if (d.nodeType == 'middle')\n        return self.options.middleCharge;\n      else\n        return self.options.otherCharge;\n      })\n    .friction(self.options.friction)\n    .linkDistance(function(d) { return self.options.linkDistanceMultiplier * d.value; })\n    .linkStrength(function(d) { if (d.linkType in self.linkStrengths) {\n                                  return self.linkStrengths[d.linkType];\n                                } else {\n                                  return self.linkStrengths.other; }\n    })\n    .gravity(0.000)\n    .nodes(self.graph.nodes)\n    .links(self.graph.links)\n    .chargeDistance(self.options.chargeDistance)\n    .size([self.options.svgW, self.options.svgH]);\n\n    var drag = d3.behavior.drag()\n    .on('dragstart', function(d) {\n      console.log('dragstart')\n      d3.event.sourceEvent.stopPropagation();\n                  \n      selectedNodes().each(function(d1) {\n        d1.fixed |= 2;\n      });\n    })\n    .on('drag', (d) => {\n      if (shiftKeydown) return\n      selectedNodes().each(function(d1) {\n        d1.x += d3.event.dx;\n        d1.y += d3.event.dy;\n\n        d1.px += d3.event.dx;\n        d1.py += d3.event.dy;\n      });\n\n      self.resumeForce();\n      d3.event.sourceEvent.preventDefault();\n    })\n    .on('dragend', (d) => {\n      console.log('dragend')\n      selectedNodes().each(function(d1) {\n        d1.fixed &= ~6;\n      });\n    });\n    \n    /* Main plot drawing functions */  \n    let createInitialLayout = function(structure, passedOptions = {}) {\n        // the default options\n        let options = {\n                        'sequence': '',\n                        'name': 'empty',\n                        'positions': [],\n                        'labelInterval': self.options.labelInterval,\n                        'avoidOthers': true,\n                        'uids': [],\n                        'circularizeExternal': true\n                      };\n\n        options = Object.assign(options, passedOptions);\n\n        //console.log('options.uids:', options.uids);\n        let rg = new RNAGraph(options.sequence, structure, options.name);\n        rg.circularizeExternal = options.circularizeExternal;\n\n        let rnaJson = rg.recalculateElements();\n\n        if (options.positions.length === 0) {\n            // no provided positions means we need to calculate an initial layout\n\n            if (self.options.layout == 'naview') {\n                let naview = new NAView();\n\n                let naViewPositions = naview.naview_xy_coordinates(rg.pairtable);\n                options.positions = []\n                for (let i = 0; i < naViewPositions.nbase; i++)\n                    options.positions.push([naViewPositions.x[i], naViewPositions.y[i]]);\n            } else {\n                options.positions = simpleXyCoordinates(rnaJson.pairtable);\n            }\n        }\n\n        rnaJson = rnaJson.elementsToJson()\n        .addUids(options.uids)\n        .addPositions('nucleotide', options.positions)\n        .addLabels(1, options.labelInterval)\n        .reinforceStems()\n        .reinforceLoops()\n        .connectFakeNodes()\n        .reassignLinkUids()\n        .breakNodesToFakeNodes();\n\n        return rnaJson;\n    };\n      \n    let createNewNodes = function(gnodesEnter) {\n        gnodesEnter = gnodesEnter.append('g')\n        .classed('gnode', true)\n        .attr('struct_name', function(d) { return d.structName; })\n        .attr('transform', function(d) {\n            if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                return 'translate(' + [d.x, d.y] + ')';\n            else\n                return '';\n        })\n        .each( function(d) { d.selected = d.previouslySelected = false; });\n\n        gnodesEnter\n        .attr('num', function(d) { return 'n' + d.num; })\n        .attr('rnum', function(d) {\n            return 'n' + (d.rna.rnaLength - d.num + 1); })\n        .transition()\n        .duration(750)\n        .ease('elastic');\n        \n        if (self.options.editable || self.options.animation) {\n          gnodesEnter.on('mousedown', nodeMousedown)\n          //.on('mousedrag', function(d) {})\n          .on('mouseup', nodeMouseup)\n          .on('contextmenu', self.nodeContextMenu)\n          .call(drag)\n        }\n\n        let labelAndProteinNodes = gnodesEnter.filter(function(d) {\n            return d.nodeType == 'label' || d.nodeType == 'protein';\n        });\n\n        let nucleotideNodes = gnodesEnter.filter(function(d) {\n            return d.nodeType == 'nucleotide';\n        });\n\n        labelAndProteinNodes.append('svg:circle')\n        .classed(fstyle.node, true)\n        .attr('r', function(d) {\n            if (d.nodeType == 'middle') return 0;\n            else {\n                return d.radius;\n            }\n        })\n        .attr('node_type', function(d) { return d.nodeType; })\n        .attr('node_num', function(d) { return d.num; });\n\n        // direction arrows\n        nucleotideNodes.append('svg:path')\n        .attr('class', fstyle.directionArrow)\n        .attr('node_num', function(d) { return d.num; })\n\n        // nucleotide outlines\n        nucleotideNodes.append('svg:circle')\n        .attr('class', fstyle.node)\n        .attr('node_type', function(d) { return d.nodeType; })\n        .attr('node_num', function(d) { return d.num; })\n        .attr('r', function(d) { return d.radius; })\n        .append('svg:title')\n        .text(function(d) {\n            if (d.nodeType == 'nucleotide') {\n                return d.structName + ':' + d.num;\n            } else {\n                return '';\n            }\n        });\n\n        // nucleotide labels\n        var labelsEnter = gnodesEnter.append('text')\n        .text(function(d) { return d.name; })\n        .attr('class', fstyle.nodeLabel)\n        .attr('label_type', function(d) { return d.nodeType; })\n\n        // nucleotide label title\n        labelsEnter.append('svg:title')\n        .text(function(d) {\n            if (d.nodeType == 'nucleotide') {\n                return d.structName + ':' + d.num;\n            } else {\n                return '';\n            }\n        });\n\n        return gnodesEnter;\n    };\n    \n    let createNewLinks = function(linksEnter) {\n        var linkLines = linksEnter.append('svg:line');\n\n        linkLines.append('svg:title')\n        .text((d) => { return d.linkType + ':' + d.source.num + '-' + d.target.num });\n\n        linkLines\n        .classed('link', true)\n        .classed(fstyle.link, true)\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('y1', function(d) { return d.source.y; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y2', function(d) { return d.target.y; })\n        .attr('link_type', function(d) { return d.linkType; } )\n        .attr('pointer-events', function(d) { if (d.linkType == 'fake') return 'none'; else return 'all';});\n        \n        if (self.options.editable)\n          linkLines.on('click', linkClick);\n\n        /* We don't need to update the positions of the stabilizing links */\n        /*\n        basepairLinks = visLinks.selectAll('[link_type=basepair]');\n        basepairLinks.classed('basepair', true);\n\n        fakeLinks = visLinks.selectAll('[link_type=fake]')\n        fakeLinks.classed('fake', true);\n\n        intermolecule_links = vis_links.selectAll('[link_type=intermolecule]');\n        intermolecule_links.classed('intermolecule', true);\n\n        plink = vis_links.selectAll('[link_type=protein_chain],[link_type=chain_chain]');\n        plink.classed('chain_chain', true);\n        */\n\n       return linkLines;\n    };\n    \n    function drawDirectionArrow(d) {\n        let magnitude = (x) => {\n            return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n        }\n\n        let endPoint = d;\n        let startPoint = d.prevNode;\n        // get stroke width and arrow size values from css\n        let nodeStroke = parseFloat(fstyle.nodeStrokeWidth) / 2;\n        let lengthMult = parseFloat(fstyle.directionArrowSize);\n        let arrowWidth = parseFloat(fstyle.directionArrowWidth);\n\n        if (startPoint === null)\n            return;\n\n        // does this node have a link pointing to it?\n        if (!d.linked)\n            return;\n\n        // point back toward the previous node\n        let u = [-(endPoint.x - startPoint.x), -(endPoint.y - startPoint.y)];\n\n        if (u[0] == 0 && u[1] == 0)\n            return;     // will lead to a NaN error\n\n        // scale u to unit length\n        u = [u[0] / magnitude(u), u[1] / magnitude(u)];\n        // normal vector of u\n        let v = [-u[1], u[0]];\n\n        // calculate the tip position\n        let arrowTip = [(d.radius + nodeStroke) * u[0], (d.radius + nodeStroke) * u[1]];\n\n        let path = 'M' + (arrowTip[0] + lengthMult * (u[0]/2 + v[0]*arrowWidth/2)) + ',' + (arrowTip[1] + lengthMult * (u[1]/2 + v[1]*arrowWidth/2)) +\n                   'L' + (arrowTip[0]) + ',' + (arrowTip[1]) +\n                   'L' + (arrowTip[0] + lengthMult * (u[0]/2 - v[0]*arrowWidth/2)) + ',' + (arrowTip[1] + lengthMult * (u[1]/2 - v[1]*arrowWidth/2));\n\n        d3.select(this).attr('d', path);\n    }\n\n    let realLinkFilter = (d) => {\n        return d.linkType == 'basepair' ||\n               d.linkType == 'backbone' ||\n               d.linkType == 'intermolecule' ||\n               d.linkType == 'pseudoknot' ||\n               d.linkType == 'label_link' ||\n               d.linkType == 'external' ||\n               d.linkType == 'chain_chain';\n    }\n\n    let recalculateGraph = () => {\n        // Condense all of the individual RNAs into one\n        // collection of nodes and links\n        self.graph.nodes = [];\n        self.graph.links = [];\n        for (let uid in self.rnas) {\n            self.graph.nodes = self.graph.nodes.concat(self.rnas[uid].nodes);\n            self.graph.links = self.graph.links.concat(self.rnas[uid].links);\n        }\n\n        // Create a lookup table so that we can access each node\n        // based on its uid. This will be used to create the links\n        // between different RNAs\n        var uidsToNodes = {};\n\n        for (let i = 0; i < self.graph.nodes.length; i++)\n            uidsToNodes[self.graph.nodes[i].uid] = self.graph.nodes[i];\n\n        self.graph.links.forEach(function(link) {\n            link.source = uidsToNodes[link.source.uid];\n            link.target = uidsToNodes[link.target.uid];\n        });\n\n        for (let i = 0; i < self.extraLinks.length; i++) {\n            // the actual node objects may have changed, so we hae to recreate\n            // the extra links based on the uids\n            if (!(self.extraLinks[i].target.uid in uidsToNodes)) {\n                console.log('not there:', self.extraLinks[i]);\n                continue;\n            }\n\n            self.extraLinks[i].source = uidsToNodes[self.extraLinks[i].source.uid];\n            self.extraLinks[i].target = uidsToNodes[self.extraLinks[i].target.uid];\n\n            if (self.extraLinks[i].linkType == 'intermolecule') {\n                //remove links to middle nodes\n                let fakeLinks = self.graph.links.filter(function(d) {\n                    return ((d.source == self.extraLinks[i].source || d.source == self.extraLinks[i].target ||\n                            d.target == self.extraLinks[i].source || d.target == self.extraLinks[i].source) &&\n                            d.linkType == 'fake');\n                });\n\n                for (let j = 0; j < fakeLinks.length; j++) {\n                    let linkIndex = self.graph.links.indexOf(fakeLinks[j]);\n                    self.graph.links.splice(linkIndex, 1);\n                }\n            }\n\n            graph.links.push(self.extraLinks[i]);\n        }\n    };\n    \n    self.update = function () {\n        self.force.nodes(self.graph.nodes)\n        .links(self.graph.links);\n\n        if (self.options.animation) {\n          self.force.start();\n        }\n\n        let allLinks = visLinks.selectAll('line.link')\n        .data(self.graph.links.filter(realLinkFilter), elementKey);\n\n        allLinks.attr('class', '')\n        .classed('link', true)\n        .classed(fstyle.link, true)\n        .attr('link_type', function(d) { return d.linkType; } )\n\n        let linksEnter = allLinks.enter();\n        createNewLinks(linksEnter);\n\n        allLinks.exit().remove();\n\n        let gnodes = visNodes.selectAll('g.gnode')\n        .data(self.graph.nodes, elementKey);\n        //.attr('pointer-events', 'all');\n\n        let gnodesEnter = gnodes.enter();\n        createNewNodes(gnodesEnter);\n        gnodes.exit().remove();\n\n\n        //fake_nodes = self.graph.nodes.filter(function(d) { return d.nodeType == 'middle'; });\n        //fakeNodes = self.graph.nodes.filter(function(d) { return true; });\n        let realNodes = self.graph.nodes.filter(function(d) { return d.nodeType == 'nucleotide' || d.nodeType == 'label';});\n\n        gnodes.select('.' + fstyle.directionArrow).each(drawDirectionArrow);\n\n        self.force.on('tick', function() {\n            let q = d3.geom.quadtree(realNodes);\n            let i = 0;\n            let n = realNodes.length;\n            \n            let collide = (node) => {\n                let r = node.radius + 16,\n                nx1 = node.x - r,\n                nx2 = node.x + r,\n                ny1 = node.y - r,\n                ny2 = node.y + r;\n                return function(quad, x1, y1, x2, y2) {\n                    if (quad.point && (quad.point !== node)) {\n                        let x = node.x - quad.point.x,\n                        y = node.y - quad.point.y,\n                        l = Math.sqrt(x * x + y * y),\n                        r = node.radius + quad.point.radius;\n                        if (l < r) {\n                            l = (l - r) / l * 0.1;\n                            node.x -= x *= l;\n                            node.y -= y *= l;\n                            quad.point.x += x;\n                            quad.point.y += y;\n                        }\n                    }\n                    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\n                };\n            }\n\n            while (++i < n) q.visit(collide(realNodes[i]));\n\n            allLinks.attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) {  return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; });\n\n            // Translate the groups\n            gnodes.attr('transform', function(d) {\n                return 'translate(' + [d.x, d.y] + ')';\n            });\n\n            gnodes.select('.' + fstyle.directionArrow).each(drawDirectionArrow);\n\n        });\n\n        self.force.on('end', () => {\n            gnodes.selectAll('[node_type=nucleotide]')\n            .filter((d,i) => { if (i == 0) return true; else return false; })\n            .each((d,i) => {\n                //console.log(\"pos\", d.num, d.x, d.y);\n            });\n\n            //for (let uid in self.rnas) {\n            //    for (let i = 1; i < self.rnas[uid].pairtable[0]; i++) {\n            //        console.log('pt', i, self.rnas[uid].pairtable[i]);\n            //    }\n            //}\n\n        });\n\n        self.changeColorScheme(self.colorScheme);\n\n        if (self.options.animation) {\n          self.force.start();\n        }\n\n        updateStyle();\n    };\n    \n    self.transitionRNA = function(newStructure, nextFunction) {\n        //transition from an RNA which is already displayed to a new structure\n        var duration = self.options.transitionDuration;\n\n        var uids = self.graph.nodes\n        .filter(function(d) { return d.nodeType == 'nucleotide'; })\n        .map(function(d) { return d.uid; });\n\n        let options = {'uids': uids};\n        var newRNAJson = createInitialLayout(newStructure, options);\n\n        let gnodes = visNodes.selectAll('g.gnode').data(newRNAJson.nodes, elementKey);\n        var links = visLinks.selectAll('line.link').data(newRNAJson.links.filter(realLinkFilter), elementKey);\n        \n        if (duration === 0)\n            gnodes.attr('transform', function(d) {\n                return 'translate(' + [d.x, d.y] + ')';\n            });\n        else {\n            gnodes.transition()\n            .attr('transform', function(d) {\n                return 'translate(' + [d.x, d.y] + ')'; }).duration(duration);\n        }\n        \n        \n        var newNodes = createNewNodes(gnodes.enter())\n        .attr('transform', function(d) {\n            if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                return 'translate(' + [0, 0] + ')';\n            else\n                return '';\n        });\n\n        if (duration === 0)\n            gnodes.exit().remove();\n        else\n            gnodes.exit().transition()\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [0, 0] + ')';\n                else\n                    return '';\n            });\n        \n        self.graph.nodes = gnodes.data();\n        gnodes.select('.' + fstyle.directionArrow).each(drawDirectionArrow);\n        self.changeColorScheme(self.colorScheme);\n        updateStyle();\n        self.centerView(duration);\n\n        function endall(transition, callback) {\n            if (transition.size() === 0) { setTimeout(callback, duration); }\n            var n = 0;\n            transition\n            .each(function() { ++n; })\n            .each('end', function() { if (!--n) callback.apply(this, arguments); });\n        }\n\n        function afterAnimation() {\n            var newLinks = createNewLinks(links.enter());\n            self.graph.links = links.data();\n            self.changeColorScheme(self.colorScheme);\n            updateStyle();\n\n            if (typeof nextFunction != 'undefined')\n                nextFunction();\n\n        }\n\n        links.exit().remove();\n\n        if (duration === 0) {\n            links\n            .attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) { return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; });\n\n            var newLinks = createNewLinks(links.enter());\n            self.graph.links = links.data();\n\n            updateStyle();\n        } else {\n            links.transition()\n            .attr('x1', function(d) { return d.source.x; })\n            .attr('y1', function(d) { return d.source.y; })\n            .attr('x2', function(d) { return d.target.x; })\n            .attr('y2', function(d) { return d.target.y; })\n            .duration(duration)\n            .call(endall, afterAnimation);\n        }\n\n        if (duration === 0) {\n            newNodes\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [d.x, d.y] + ')';\n                else\n                    return '';\n            });\n        } else {\n            newNodes.transition()\n            .attr('transform', function(d) {\n                if (typeof d.x != 'undefined' && typeof d.y != 'undefined')\n                    return 'translate(' + [d.x, d.y] + ')';\n                else\n                    return '';\n            });\n        }\n\n    };\n    \n    /* Plot presentation related functions */\n    let getBoundingBoxTransform = () => {\n        // Center the view on the molecule(s) and scale it so that everything\n        // fits in the window\n\n        //no molecules, nothing to do\n        if (self.graph.nodes.length === 0)\n            return {'translate': [0,0], 'scale': 1};\n\n        // Get the bounding box\n        var minX = d3.min(self.graph.nodes.map(function(d) {return d.x;}));\n        var minY = d3.min(self.graph.nodes.map(function(d) {return d.y;}));\n\n        var maxX = d3.max(self.graph.nodes.map(function(d) {return d.x;}));\n        var maxY = d3.max(self.graph.nodes.map(function(d) {return d.y;}));\n\n        var maxRadius = d3.max(self.graph.nodes.map(function(d) { return d.radius; }));\n\n        // The width and the height of the molecule\n        var molWidth = maxX - minX;\n        var molHeight = maxY - minY;\n\n        // how much larger the drawing area is than the width and the height\n        var widthRatio = self.options.svgW / (molWidth + 1);\n        var heightRatio = self.options.svgH / (molHeight + 1);\n\n        // we need to fit it in both directions, so we scale according to\n        // the direction in which we need to shrink the most\n        var minRatio = Math.min(widthRatio, heightRatio,\n                                self.options.maxNodeRadius / maxRadius) * 0.8;\n\n        // the new dimensions of the molecule\n        var newMolWidth = molWidth * minRatio;\n        var newMolHeight = molHeight * minRatio;\n\n        // translate so that it's in the center of the window\n        var xTrans = -(minX) * minRatio + (self.options.svgW - newMolWidth) / 2;\n        var yTrans = -(minY) * minRatio + (self.options.svgH - newMolHeight) / 2;\n\n        return {'translate': [xTrans, yTrans], 'scale': minRatio};\n    };\n\n    self.centerView = function(duration = 0) {\n        var bbTransform = getBoundingBoxTransform();\n\n        if (bbTransform === null)\n            return;\n\n        // do the actual moving\n        vis.transition().attr('transform',\n                 'translate(' + bbTransform.translate + ')' + ' scale(' + bbTransform.scale + ')').duration(duration);\n\n        // tell the zoomer what we did so that next we zoom, it uses the\n        // transformation we entered here\n        self.zoomer.translate(bbTransform.translate);\n        self.zoomer.scale(bbTransform.scale);\n    };\n    \n    self.setSize = (\n      svgW = d3.select(element).node().offsetWidth,\n      svgH = d3.select(element).node().offsetHeight\n    ) => {\n      // save width and height\n      self.options.svgW = svgW;\n      self.options.svgH = svgH;\n\n      // set the viewBox\n      svg.attr('viewBox', \"0 0 \" + svgW + \" \" + svgH)\n\n      //Set the output range of the scales\n      xScale.range([0, svgW]).domain([0, svgW]);\n      yScale.range([0, svgH]).domain([0, svgH]);\n\n      //re-attach the scales to the zoom behaviour\n      self.zoomer.x(xScale)\n      .y(yScale);\n      self.brusher.x(xScale)\n      .y(yScale);\n\n      //resize the background\n      svg.select('.background')\n      .attr('width', svgW)\n      .attr('height', svgH);\n\n      // center the view\n      self.centerView();\n    }\n    \n    /* Style and color related functions */\n    self.setOutlineColor = function(color) {\n        var nodes = visNodes.selectAll('g.gnode').select('[node_type=nucleotide]');\n        nodes.style('fill', color);\n    }\n\n    self.addCustomColors = function addCustomColors(json) {\n        // Add a json file containing the custom colors\n        self.customColors = json;\n        self.changeColorScheme('custom');\n    };\n\n    self.addCustomColorsText = function(customColorsText) {\n        let cs = new ColorScheme(customColorsText);\n        self.customColors = cs.colorsJson;\n        self.changeColorScheme('custom');\n    };\n\n    self.changeColorScheme = function(newColorScheme) {\n        var proteinNodes = visNodes.selectAll('[node_type=protein]');\n\n        proteinNodes.classed(fstyle.node, true)\n                    .attr('r', function(d) { return d.radius; });\n\n        var gnodes = visNodes.selectAll('g.gnode');\n        var circles = visNodes.selectAll('g.gnode').selectAll('circle');\n        var nodes = visNodes.selectAll('g.gnode').select('[node_type=nucleotide]');\n        self.colorScheme = newColorScheme;\n\n\n        if (newColorScheme == 'sequence') {\n            var scale = d3.scale.ordinal()\n            .range(['#dbdb8d', '#98df8a', '#ff9896', '#aec7e8', '#aec7e8'])\n            .domain(['A','C','G','U','T']);\n            nodes.style('fill', function(d) {\n                return scale(d.name);\n            });\n\n        } else if (newColorScheme == 'structure') {\n            var scale = d3.scale.category10()\n            .domain(['s','m','i','e','t','h','x'])\n            .range(['lightgreen', '#ff9896', '#dbdb8d', 'lightsalmon',\n                   'lightcyan', 'lightblue', 'transparent']);\n\n                   nodes.style('fill', function(d) {\n                       return scale(d.elemType);\n                   });\n\n        } else if (newColorScheme == 'positions') {\n            nodes.style('fill', function(d) {\n                var scale = d3.scale.linear()\n                .range(['#98df8a', '#dbdb8d', '#ff9896'])\n                .interpolate(d3.interpolateLab)\n                .domain([1, 1 + (d.rna.rnaLength - 1) / 2, d.rna.rnaLength]);\n\n                return scale(d.num);\n            });\n        } else if (newColorScheme == 'custom') {\n            // scale to be used in case the user passes scalar\n            // values rather than color names\n            if (typeof self.customColors != 'undefined' &&\n                'domain' in self.customColors &&\n               'range' in self.customColors) {\n                var scale = d3.scale.linear()\n                .interpolate(d3.interpolateLab)\n                .domain(self.customColors.domain)\n                .range(self.customColors.range);\n            }\n\n            let changeColors = (moleculeColors, d, scale) => {\n                if (moleculeColors.hasOwnProperty(d.num)) {\n                    let val = parseFloat(moleculeColors[d.num]);\n\n                    if (isNaN(val)) {\n                        // passed in color is not a scalar, so\n                        // treat it as a color\n                        return moleculeColors[d.num];\n                    } else {\n                        // the user passed in a float, let's use a colormap\n                        // to convert it to a color\n                        return scale(val);\n                    }\n                } else {\n                    return 'white';\n                }\n            }\n\n            nodes.style('fill', function(d) {\n                if (typeof self.customColors == 'undefined' ||\n                   !self.customColors.hasOwnProperty('colorValues')) {\n                    return 'white';\n                }\n\n                if (self.customColors.colorValues.hasOwnProperty(d.structName) &&\n                    self.customColors.colorValues[d.structName].hasOwnProperty(d.num)) {\n                    // if a molecule name is specified, it supercedes the default colors\n                    // (for which no molecule name has been specified)\n                    let moleculeColors = self.customColors.colorValues[d.structName];\n                    return changeColors(moleculeColors, d, scale);\n                } else if (self.customColors.colorValues.hasOwnProperty('')) {\n                    let moleculeColors = self.customColors.colorValues[''];\n                    return changeColors(moleculeColors, d, scale);\n                }\n\n                return 'white';\n            });\n        }\n    };\n    \n    let updateStyle = () => {\n        // Numbering\n        visNodes.selectAll('[node_type=label]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        visNodes.selectAll('[label_type=label]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        visLinks.selectAll('[link_type=label_link]').classed(fstyle.transparent, !self.displayParameters.displayNumbering);\n        // Node Outline\n        svg.selectAll('[node_type=nucleotide]').classed(fstyle.transparent, !self.displayParameters.displayNodeOutline);\n        // Node Labels\n        visNodes.selectAll('[label_type=nucleotide]').classed(fstyle.transparent, !self.displayParameters.displayNodeLabel);\n        // Links\n        svg.selectAll('[link_type=real],[link_type=basepair],[link_type=backbone],[link_type=pseudoknot],[link_type=protein_chain],[link_type=chain_chain],[link_type=external]').classed(fstyle.transparent, !self.displayParameters.displayLinks);\n        // Pseudoknot Links\n        svg.selectAll('[link_type=pseudoknot]').classed(fstyle.transparent, !self.displayParameters.displayPseudoknotLinks);\n        // Protein Links\n        svg.selectAll('[link_type=protein_chain]').classed(fstyle.transparent, !self.displayParameters.displayProteinLinks);\n        // Fake Links\n        visLinks.selectAll('[link_type=fake]').classed(fstyle.transparent, !self.options.displayAllLinks);\n        visLinks.selectAll('[link_type=fake_fake]').classed(fstyle.transparent, !self.options.displayAllLinks);\n        // direction Arrows\n        svg.selectAll('.' + fstyle.directionArrow).classed(fstyle.transparent, !self.displayParameters.displayDirectionArrows);\n    };\n    \n    /* RNA edditing related functions */\n    let changeNode = function(nodeName, referenceNode) {\n        // change the label of a node\n        let rna = referenceNode.rna;\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newNodeNum = referenceNode.num;\n\n        let newDotbracket = dotbracket;\n        let newSequence = sequence.slice(0,newNodeNum-1) +  nodeName + sequence.slice(newNodeNum);\n\n        console.log('newSequence:', newSequence);\n\n        console.log('uids:', uids);\n        uids.splice(newNodeNum-1, 1, slugid.nice());\n        let newPositions = positions;\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': uids,\n                                 'centerView': false});\n    }\n\n    let insertNodeBeforeOrAfter = function(nodeName, referenceNode, positionOffset) {\n        //insert a new node before or after another one\n        //positionOffset specifies who far from the original to insert the new node\n        let rna = referenceNode.rna;\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newNodeNum = referenceNode.num + positionOffset;\n\n        let newDotbracket = dotbracket.slice(0,newNodeNum) + '.' + dotbracket.slice(newNodeNum);\n        let newSequence = sequence.slice(0,newNodeNum) +  nodeName + sequence.slice(newNodeNum);\n\n        console.log('newSequence:', newSequence);\n\n        uids.splice(newNodeNum, 0, slugid.nice());\n        positions.splice(newNodeNum, 0, positions[newNodeNum - positionOffset-1]);\n\n        let newUids = uids;\n        let newPositions = positions;\n\n        console.log('positions:', positions);\n        console.log('new node positions:', newPositions);\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': newUids,\n                                 'centerView': false});\n    }\n\n    let deleteNode = function(node) {\n        console.log('deleting...', node);\n        // get the dotbracket string for this rna\n        let rna = node.rna;\n        let pair = rna.pairtable[node.num];\n\n        // remove basepairs for this node\n        if (pair != 0) {\n            rna.pairtable[node.num] = 0;\n            rna.pairtable[pair] = 0;\n        }\n\n        let dotbracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let positions = rna.getPositions('nucleotide');\n        let sequence = rna.seq\n        let uids = rna.getUids();\n\n        let newDotbracket = dotbracket.slice(0, node.num-1) + dotbracket.slice(node.num)\n        let newPositions = positions.slice(0, node.num-1)\n                .concat(positions.slice(node.num));\n        let newSequence = sequence.slice(0, node.num-1) + sequence.slice(node.num)\n        let newUids = uids.slice(0, node.num-1)\n                .concat(uids.slice(node.num));\n\n        delete self.rnas[rna.uid];\n        let newRNA = self.addRNA(newDotbracket, {'sequence': newSequence,\n                                 'positions': newPositions,\n                                 'uids': newUids,\n                                  'centerView': false});\n\n        console.log('new dotbracket:', newDotbracket);\n        //recalculateGraph();\n\n        //remove backbone links associated with this node\n\n        //remove this node\n\n    }\n    \n    let elementKey = (d) => {\n        return d.uid;\n    };\n    \n    let updateRnaGraph = function(r) {\n        let nucleotidePositions = r.getPositions('nucleotide');\n        let labelPositions = r.getPositions('label');\n\n        let uids = r.getUids();\n\n        r.recalculateElements()\n        .elementsToJson()\n        .addPseudoknots()\n        .addPositions('nucleotide', nucleotidePositions)\n        .addUids(uids)\n        .addLabels(1, self.options.labelInterval)\n        .addPositions('label', labelPositions)\n        .reinforceStems()\n        .reinforceLoops()\n        .updateLinkUids();\n    };\n\n    let removeBackBoneLink = function(d) {\n        if (d.target.num - d.source.num != 1) {\n            console.log('ERROR: non adjacent nodes. Target:', d.target,\n                        'Source:', d.source, 'Link:', d);\n            return;\n        }\n\n        let rna = d.target.rna;\n        let toRemove = [];\n\n        for (let i = 0; i < rna.links.length; i++) {\n            let link = rna.links[i];\n\n            if (link.linkType != 'basepair')\n                continue;\n\n            if (link.source.num <= d.source.num && link.target.num >= d.target.num) {\n                console.log('crossing basepair', link);\n                toRemove.push(link);\n            }\n        }\n\n\n        // Remove all base pairs that are between these two nodes and add them as extra\n        // links\n        console.log('toRemove:', toRemove);\n\n        for (let i = 0; i < toRemove.length; i++) {\n            rna.pairtable[toRemove[i].source.num] = 0;\n            rna.pairtable[toRemove[i].target.num] = 0;\n\n            toRemove[i].from = toRemove[i].source.num;\n            toRemove[i].to = toRemove[i].target.num - d.source.num;\n        }\n\n        // extract the dotbracket string of the rna\n        // cut it at the position of this backbone bond\n        let sequence = rna.seq;\n        let sequence1 = rna.seq.slice(0, d.source.num);\n        let sequence2 = rna.seq.slice(d.source.num);\n\n        let rnaDotBracket = rnaUtilities.pairtableToDotbracket(rna.pairtable);\n        let dotBracket1 = rnaDotBracket.slice(0, d.source.num);\n        let dotBracket2 = rnaDotBracket.slice(d.source.num)\n\n        // get the nucleotide positions\n        // cut them at the positions of the backbone bond\n        let positions = rna.getPositions('nucleotide')\n        let uids = rna.getUids();\n\n        let positions1 = positions.slice(0, d.source.num);\n        let positions2 = positions.slice(d.source.num);\n\n        let uids1 = uids.slice(0, d.source.num);\n        let uids2 = uids.slice(d.source.num);\n\n        console.log('positions1:', positions1);\n        console.log('positions2:', positions2);\n\n        delete self.rnas[rna.uid];\n        let rna1 = self.addRNA(dotBracket1, { 'sequence': sequence1,\n                                   'positions': positions1,\n                                   'uids': uids1 });\n        let rna2 = self.addRNA(dotBracket2, { 'sequence': sequence2,\n                                   'positions': positions2,\n                                   'uids': uids2 });\n        for (let i = 0; i < toRemove.length; i++) {\n            console.log('rna1:', rna1);\n            console.log('rna2:', rna2);\n            console.log('toRemove[i]', toRemove[i]);\n            self.extraLinks.push(\n                {'source': rna1.nodes[toRemove[i].from-1],\n                 'target': rna2.nodes[toRemove[i].to-1],\n                 'value': 1,\n                 'uid': slugid.nice(),\n                 'linkType': 'intermolecule'});\n                recalculateGraph();\n                self.update();\n\n        }\n        console.log('self.extraLinks:', self.extraLinks);\n        //self.extraLinks.push({'source': rna1.nodes[\n\n        // create two new rnas\n        // add their positions\n        // add them back to the plot\n    }\n\n    var removeLink = function(d) {\n        // remove a link between two nodes\n        let index = self.graph.links.indexOf(d);\n        console.log('removing link:', index);\n\n        if (index > -1) {\n            //remove a link\n            //graph.links.splice(index, 1);\n\n            // there should be two cases\n            // 1. The link is within a single molecule\n\n            if (d.source.rna == d.target.rna) {\n                if (d.linkType == 'backbone') {\n                    console.log('trying to remove a backbone link', d.source.num, d.target.num);\n                    removeBackBoneLink(d);\n                    return;\n                } else {\n                    let r = d.source.rna;\n                    r.addPseudoknots();\n                    r.pairtable[d.source.num] = 0;\n                    r.pairtable[d.target.num] = 0;\n\n                    updateRnaGraph(r);\n                }\n            } else {\n                // 2. The link is between two different molecules\n                let extraLinkIndex = self.extraLinks.indexOf(d);\n\n                self.extraLinks.splice(extraLinkIndex, 1);\n            }\n            recalculateGraph();\n        }\n        self.update();\n    };\n\n    let addBackBoneLink = function(newLink) {\n        // opposite of deleting a link\n        // get the two dotbracket strings\n        let rna1 = newLink.target.rna;\n        let rna2 = newLink.source.rna;\n        if (newLink.target.num == 1) {\n          rna1 = newLink.source.rna;\n          rna2 = newLink.target.rna;\n        }\n\n        let dotbracket1 = rnaUtilities.pairtableToDotbracket(rna1.pairtable);\n        let dotbracket2 = rnaUtilities.pairtableToDotbracket(rna2.pairtable);\n\n        let seq1 = rna1.seq;\n        let seq2 = rna2.seq;\n\n        let positions1 = rna1.getPositions('nucleotide');\n        let positions2 = rna2.getPositions('nucleotide');\n\n        // concatenate them\n        let newDotbracket = dotbracket1 + dotbracket2;\n        let newSeq = seq1 + seq2;\n        let newPositions = positions1.concat(positions2);\n\n        let toAddInternal = [];\n        let toAddExternal = [];\n        let toDelete = {};\n\n        for (let i = 0; i < self.extraLinks.length; i++) {\n            console.log('self.extraLinks[i]', self.extraLinks[i]);\n            console.log('rna1:', rna1);\n            console.log('rna2:', rna2);\n            if (self.extraLinks[i].source.rna == rna1) {\n                if ( self.extraLinks[i].target.rna == rna2) {\n                    // both ends of the extra link are within what will become the new molecule\n                    // need to be added as base pairs afterwards\n                    //self.extraLinks[i].from = self.extraLinks[i].source.num;\n                    //self.extraLinks[i].to = dotbracket1.length + self.extraLinks[i].target.num;\n                    //toAddInternal.push(self.extraLinks[i]);\n                } else {\n                    // only one end of the extra link is within what will become the newly\n                    // created molecule, needs to remain an extra link\n                    // source will always be the unchanged molecule, whereas target will be\n                    // the newly created one\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].target,\n                        'target': self.extraLinks[i].source.num\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            } else if (self.extraLinks[i].source.rna == rna2) {\n                if ( self.extraLinks[i].target.rna == rna1) {\n                    // add internal link\n                    // both ends of the extra link are within what will become the new molecule\n                    // need to be added as base pairs afterwards\n                    //self.extraLinks[i].from = self.extraLinks[i].target.num;\n                    //self.extraLinks[i].to = dotbracket1.length + self.extraLinks[i].source.num;\n\n                    //toAddInternal.push(self.extraLinks[i]);\n                } else {\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].target,\n                        'target': self.extraLinks[i].source.num + dotbracket1.length\n                    });\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            }\n\n            if (self.extraLinks[i].target.rna == rna1) {\n                if (self.extraLinks[i].source.rna == rna2) {\n                    // covered in previous if statement\n                } else {\n                    // only one end of the extra link is within what will become the newly\n                    // created molecule, needs to remain an extra link\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].source,\n                        'target': self.extraLinks[i].target.num\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            } else if (self.extraLinks[i].target.rna == rna2) {\n                if (self.extraLinks[i].source.rna == rna1) {\n                    toAddExternal.push({\n                        'source': self.extraLinks[i].source,\n                        'target': self.extraLinks[i].target.num + dotbracket1.length\n                    });\n\n                    toDelete[self.extraLinks[i].uid] = true;\n                }\n            }\n        }\n\n\n        self.extraLinks = self.extraLinks.filter((e) => { return !(e.uid in toDelete) });\n\n        delete self.rnas[rna1.uid];\n        delete self.rnas[rna2.uid];\n\n        let newRna = null;\n        // create a new RNA\n        if (self.options.animation)\n            newRna = self.addRNA(newDotbracket, { 'sequence': newSeq,\n                                'positions': newPositions,\n                                'centerView': false});\n        else\n            newRna = self.addRNA(newDotbracket, { 'sequence': newSeq,\n                        'centerView': false });\n\n\n\n        // add new external links\n        for (let i = 0; i < toAddExternal.length; i++) {\n            self.extraLinks.push({\n                'source': toAddExternal[i].source,\n                'target': newRna.nodes[toAddExternal[i].target-1],\n                'value': 1,\n                'uid': slugid.nice(),\n                'linkType': 'intermolecule'\n            });\n        }\n\n        recalculateGraph();\n        self.update();\n        console.log('self.extraLinks:', self.extraLinks);\n    };\n\n    function nudge(dx, dy) {\n      // TODO currently unused\n        node.filter(function(d) { return d.selected; })\n        .attr('cx', function(d) { return d.x += dx; })\n        .attr('cy', function(d) { return d.y += dy; });\n\n        link.filter(function(d) { return d.source.selected; })\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('y1', function(d) { return d.source.y; });\n\n        link.filter(function(d) { return d.target.selected; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y2', function(d) { return d.target.y; });\n\n        d3.event.preventDefault();\n    }\n\n    let nodeMouseup = function(d,i) {\n        console.log(\"nodeMouseup\")\n        let backbonePossible = true, basepairPossible = true;\n\n        if (mousedownNode) {\n            mouseupNode = d;\n\n            // if the node isn't a nucleotide, we can't create a link\n            if (mouseupNode.nodeType == 'middle' || mousedownNode.nodeType == 'middle' || mouseupNode.nodeType == 'label' || mousedownNode.nodeType == 'label')\n                return;\n\n            if (mouseupNode == mousedownNode) { resetMouseVars(); return; }\n            let newLink = {source: mousedownNode, target: mouseupNode, linkType: 'basepair', value: 1, uid: slugid.nice()};\n\n            for (let i = 0; i < self.graph.links.length; i++) {\n                if ((self.graph.links[i].source == mousedownNode)  ||\n                    (self.graph.links[i].target == mousedownNode) ||\n                    (self.graph.links[i].source == mouseupNode) ||\n                    (self.graph.links[i].target == mouseupNode)) {\n                    // either one of the nodes is already in a link\n\n                    // if any of the nodes are already involved in a basepair or a pseudoknot\n                    // then we can't make a basepair link\n                    if (self.graph.links[i].linkType == 'basepair' ||\n                        self.graph.links[i].linkType == 'pseudoknot' ||\n                        self.graph.links[i].linkType == 'intermolecule') {\n                        // although should be able to make a backbone link\n                        console.log('no basepair possible');\n                        basepairPossible = false;\n                    }\n                }\n\n                if (((self.graph.links[i].source == mouseupNode)  &&\n                     (self.graph.links[i].target == mousedownNode)) ||\n                         ((self.graph.links[i].source == mousedownNode)  &&\n                          (self.graph.links[i].target == mouseupNode))) {\n\n                    // if we're trying to make a link between two nodes which already have\n                    // a backbone between them, then we can't make a link\n                    if (self.graph.links[i].linkType == 'backbone') {\n                        return;\n                    }\n                }\n            }\n\n\n            if (newLink.source.rna != newLink.target.rna) {\n                    // could be either a backbone link or an intermolecule link\n\n                if ((newLink.source.num == 1 &&\n                     newLink.target.num == newLink.target.rna.rnaLength) ||\n                     (newLink.target.num == 1 &&\n                      newLink.source.num == newLink.source.rna.rnaLength)) {\n                          //\n                          let linkMenu = [\n                              {\n                                  title: 'Backbone Link',\n                                  action: function(elm, d, i) {\n                                      linkContextMenuShown = false;\n                                      console.log('Item #1 clicked!');\n                                      console.log('The data for this circle is: ' + d);\n                                      dragLine.attr('class', fstyle.transparent);\n                                      addBackBoneLink(newLink);\n                                  },\n                                  disabled: false // optional, defaults to false\n                              },\n                              {\n                                  title: 'Basepair Link',\n                                  action: function(elm, d, i) {\n                                      linkContextMenuShown = false;\n                                      console.log('You have clicked the second item!');\n                                      console.log('The data for this circle is: ' + d);\n                                      dragLine.attr('class', fstyle.transparent);\n                                      self.addLink(newLink);\n                                  }\n                              }\n                          ]\n                          linkContextMenuShown = true;\n                          let linkContextMenu = contextMenu(linkMenu);\n                          console.log('newLinkMenu');\n                          linkContextMenu.apply(this, [d,i,true,\n                                                function() { dragLine.attr('class', fstyle.transparent) }]);\n                      } else {\n                          // between end points but can't make a backbone\n                          if (basepairPossible)\n                            self.addLink(newLink);\n                      }\n            } else {\n                if (basepairPossible)\n                    self.addLink(newLink);\n            }\n\n        }\n    };\n\n    let nodeMousedown = function(d) {\n      console.log(\"nodeMousedown\")\n      if (!d.selected && !ctrlKeydown) {\n        // if this node isn't selected, then we have to unselect every other node\n        deselectAllNodes()\n      }\n      \n      if (!shiftKeydown) {\n        // only without shift, toggle select or select\n        if (ctrlKeydown) {\n          toggleSelectNode(d)\n        } else {\n          selectNode(d)\n        }\n      }\n      \n      if (shiftKeydown && self.options.editable) {\n        // with shift key and editable continue to draw dragline\n        mousedownNode = d;\n\n        dragLine\n        .attr('class', fstyle.dragLine)\n        .attr('x1', mousedownNode.x)\n        .attr('y1', mousedownNode.y)\n        .attr('x2', mousedownNode.x)\n        .attr('y2', mousedownNode.y);\n\n        d3.event.stopPropagation();\n      }\n    };\n    \n    let linkClick = (d) => {\n        if (!shiftKeydown) {\n            return;\n        }\n\n        var invalidLinks = { //'backbone': true,\n                             'fake': true,\n                             'fake_fake': true,\n                             'label_link': true};\n\n        console.log('d.linkType:', d.linkType);\n        if (d.linkType in invalidLinks )\n            return;\n\n        removeLink(d);\n    };\n    \n    /* I/O functions */\n    self.toJSON = function toJSON() {\n       var data = {'rnas': self.rnas, 'extraLinks': self.extraLinks};\n            var dataString = JSON.stringify(data, function(key, value) {\n            //remove circular references\n            if (key == 'rna') {\n                return;\n            } else {\n                return value;\n            }\n       }, '\\t');\n       return dataString;\n    };\n\n    self.fromJSON = function(jsonString) {\n        var rnas, extraLinks;\n\n        try{\n            var data = JSON.parse(jsonString);\n            rnas = data.rnas;\n            extraLinks = data.extraLinks;\n        } catch(err) {\n            throw err;\n        }\n\n        for (var uid in rnas) {\n            if (rnas[uid].type == 'rna') {\n                r = new RNAGraph();\n\n                r.seq = rnas[uid].seq;\n                r.dotbracket = rnas[uid].dotbracket;\n                r.circular = rnas[uid].circular;\n                r.pairtable = rnas[uid].pairtable;\n                r.uid = rnas[uid].uid;\n                r.structName = rnas[uid].structName;\n                r.nodes = rnas[uid].nodes;\n                r.links = rnas[uid].links;\n                r.rnaLength = rnas[uid].rnaLength;\n                r.elements = rnas[uid].elements;\n                r.nucsToNodes = rnas[uid].nucsToNodes;\n                r.pseudoknotPairs = rnas[uid].pseudoknotPairs;\n            } else {\n                r = new ProteinGraph();\n                r.size = rnas[uid].size;\n                r.nodes = rnas[uid].nodes;\n                r.uid = rnas[uid].uid;\n            }\n\n            self.addRNAJSON(r, false);\n        }\n\n        extraLinks.forEach(function(link) {\n            self.extraLinks.push(link);\n        });\n\n        recalculateGraph();\n        self.update();\n    };\n    \n    self.addRNA = function(structure, passedOptions = {}) {\n        let rnaJson = createInitialLayout(structure, passedOptions);\n        let centerView = false;\n\n        /*\n         * Code to display the JSONs representing the structure\n         *\n        rnaJson.nodes[0].rna = null;\n        rnaJson.nodes[0].nextNode = null;\n\n        rnaJson.links[0].source = null;\n        rnaJson.links[0].target = null;\n\n        console.log(rnaJson.nodes[0]);\n        console.log(rnaJson.links[0]);\n        console.log(JSON.stringify(rnaJson.nodes[0],null,2));\n        console.log(JSON.stringify(rnaJson.links[0],null,2));\n        */\n\n        if ('extraLinks' in passedOptions) {\n            // presumably the passed in links are within the passed molecule\n            let newLinks = self.addExternalLinks(rnaJson, passedOptions.extraLinks);\n\n            self.extraLinks = self.extraLinks.concat(newLinks);\n        }\n\n        if ('centerPos' in passedOptions)\n            self.addRNAJSON(rnaJson, {centerPos: passedOptions.centerPos,\n                                      centerView: false})\n        else if ('avoidOthers' in passedOptions)\n            self.addRNAJSON(rnaJson, {avoidOthers: passedOptions.avoidOthers});\n        else\n            self.addRNAJSON(rnaJson, {centerView: passedOptions.centerView});\n\n        return rnaJson;\n    };\n\n    self.addRNAJSON = function(rnaGraph,\n     { avoidOthers = false,\n      centerPos = null,\n      centerView = true}\n    ) {\n        // Add an RNAGraph, which contains nodes and links as part of the\n        // structure\n        // Each RNA will have uid to identify it\n        // when it is modified, it is replaced in the global list of RNAs\n        //\n        var maxX, minX;\n        //console.log('centerView:', centerView);\n\n        if (centerPos != null) {\n            // center the newly created RNA at a given position\n            let totalX = 0;\n            let totalY = 0;\n            let nodeCount = 0;\n\n            rnaGraph.nodes.forEach(function(node) {\n                totalX += node.x;\n                totalY += node.y;\n                nodeCount += 1;\n            });\n\n            if (nodeCount > 0) {\n                // center the nodes at centerPos\n\n                rnaGraph.nodes.forEach(function(node) {\n                    node.x = node.x + centerPos[0] - totalX / nodeCount;\n                    node.y = node.y + centerPos[1] - totalY / nodeCount;\n\n                    node.px = node.x;\n                    node.py = node.y;\n                });\n            }\n        }\n\n        if (avoidOthers) {\n            if (self.graph.nodes.length > 0)\n                maxX = d3.max(self.graph.nodes.map(function(d) { return d.x; }));\n            else\n                maxX = 0;\n\n            minX = d3.min(rnaGraph.nodes.map(function(d) { return d.x; }));\n\n            rnaGraph.nodes.forEach(function(node) {\n                node.x += (maxX - minX) + 20;\n                node.px += (maxX - minX);\n            });\n        }\n\n        rnaGraph.nodes.forEach(function(node) {\n            node.rna = rnaGraph;\n        });\n\n        self.rnas[rnaGraph.uid] = rnaGraph;\n        recalculateGraph();\n\n        self.update();\n\n        if (centerView)\n            self.centerView();\n\n        return rnaGraph;\n    };\n    \n    self.addNodes = function addNodes(json) {\n        // add a new set of nodes from a json file\n\n        // Resolve the sources and targets of the links so that they\n        // are not just indeces into an array\n        json.links.forEach(function(entry) {\n            if (typeof entry.source == 'number') entry.source = json.nodes[entry.source];\n            if (typeof entry.target == 'number') entry.target = json.nodes[entry.target];\n        });\n\n        // Get the maximum x and y values of the current graph\n        // so that we don't place a new structure on top of the\n        // old one\n        if (self.graph.nodes.length > 0) {\n            maxX = d3.max(self.graph.nodes.map(function(d) {return d.x;}));\n            maxY = d3.max(self.graph.nodes.map(function(d) {return d.y;}));\n        } else {\n            maxX = 0;\n            maxY = 0;\n        }\n\n        json.nodes.forEach(function(entry) {\n            if (!(entry.rna.uid in self.rnas)) {\n                self.rnas[entry.rna.uid] = entry.rna;\n            }\n\n            entry.x += maxX;\n            //entry.y += maxY;\n\n            entry.px += maxX;\n            //entry.py += maxY;\n        });\n\n        r = new RNAGraph('','');\n        r.nodes = json.nodes;\n        r.links = json.links;\n\n        //self.addRNA(r);\n        recalculateGraph();\n\n        self.update();\n        self.centerView();\n    };\n    \n    self.clearNodes = () => {\n        self.graph.nodes = [];\n        self.graph.links = [];\n\n        self.rnas = {};\n        self.extraLinks = [];\n\n        self.update();\n    };\n    \n    self.addLink =  function(newLink) {\n        // this means we have a new json, which means we have\n        // to recalculate the structure and change the colors\n        // appropriately\n        //\n        console.log('adding new link');\n        if (newLink.source.rna == newLink.target.rna) {\n            // must be a basepair\n            let r = newLink.source.rna;\n\n            r.pairtable[newLink.source.num] = newLink.target.num;\n            r.pairtable[newLink.target.num] = newLink.source.num;\n\n            updateRnaGraph(r);\n\n        } else {\n            //Add an extra link\n            console.log('intermolecule');\n            newLink.linkType = 'intermolecule';\n            self.extraLinks.push(newLink);\n        }\n        recalculateGraph();\n        self.update();\n    };\n    \n    self.addExternalLinks = function(rnaJson, externalLinks) {\n        let newLinks = [];\n\n        for (let i = 0; i < externalLinks.length; i++) {\n            let newLink = {linkType: 'external', value: 1, uid: slugid.nice(),\n                source: null, target: null};\n            // check if the source node is an array\n            if (Object.prototype.toString.call(externalLinks[i][0]) === '[object Array]') {\n                for (let j = 0; j < rnaJson.nodes.length; j++) {\n                    if ('nucs' in rnaJson.nodes[j]) {\n                        if (rnaJson.nodes[j].nucs.equals(externalLinks[i][0])) {\n                            newLink.source = rnaJson.nodes[j];\n                            break;\n                        }\n                    }\n                }\n            } else {\n                for (let j = 0; j < rnaJson.nodes.length; j++) {\n                    if (rnaJson.nodes[j].num == externalLinks[i][0]) {\n                        newLink.source = rnaJson.nodes[j];\n                    }\n                }\n            }\n\n            // check if the target node is an array\n            if (Object.prototype.toString.call(externalLinks[i][1]) === '[object Array]') {\n                for (let j = 0; j < rnaJson.nodes.length; j++) {\n                    if ('nucs' in rnaJson.nodes[j]) {\n                        if (rnaJson.nodes[j].nucs.equals(externalLinks[i][1])) {\n                            newLink.target = rnaJson.nodes[j];\n                        }\n                    }\n                }\n            } else {\n                for (let j = 0; j < rnaJson.nodes.length; j++) {\n                    if (rnaJson.nodes[j].num == externalLinks[i][1]) {\n                        newLink.target = rnaJson.nodes[j];\n                    }\n                }\n            }\n\n            if (newLink.source == null || newLink.target == null) {\n                console.log('ERROR: source or target of new link not found:', newLink, externalLinks[i]);\n                continue;\n            }\n\n            newLinks.push(newLink);\n        }\n\n        return newLinks;\n    };\n    \n    self.getStructuresDotBracket = function() {\n        console.log('self.rnas:', self.rnas);\n        let sequence = [];\n        let currIdx = 1;\n        let nodeIdxs = {};\n        let breaks = [];\n        let pairtable = [];\n\n        // add the nodes\n        for (let uid in self.rnas) {\n            let rna = self.rnas[uid];\n\n            for (let j = 0; j < rna.nodes.length; j++) {\n                let node = rna.nodes[j];\n\n                if (node.nodeType != 'nucleotide')\n                    continue;\n\n                console.log('node:', node);\n                nodeIdxs[node.uid] = currIdx;\n                currIdx += 1;\n\n                sequence.push(node.name);\n            }\n\n            breaks.push(currIdx);\n        }\n\n        pairtable = [currIdx-1]\n        for (let i = 0; i < currIdx; i++)\n            pairtable.push(0)\n\n        // add the links\n        for (let uid in self.rnas) {\n            let rna = self.rnas[uid];\n\n            for (let j = 0; j < rna.links.length; j++) {\n                let link = rna.links[j];\n\n                if (link.linkType != 'basepair')\n                    continue;\n\n                let idx1 = nodeIdxs[link.source.uid];\n                let idx2 = nodeIdxs[link.target.uid];\n                pairtable[idx1] = idx2;\n                pairtable[idx2] = idx1;\n            }\n        }\n\n        for (let i = 0; i < self.extraLinks.length; i++) {\n            let link = self.extraLinks[i];\n\n            let idx1 = nodeIdxs[link.source.uid];\n            let idx2 = nodeIdxs[link.target.uid];\n\n            pairtable[idx1] = idx2;\n            pairtable[idx2] = idx1;\n        }\n\n        let structure = rnaUtilities.pairtableToDotbracket(pairtable).split('');\n\n        for (let i = 0; i < breaks.length - 1; i++) {\n            console.log('breaks[i]:', breaks[i]);\n            sequence.splice(breaks[i] + i - 1, 0, '&');\n            structure.splice(breaks[i] + i - 1, 0, '&');\n        }\n\n        console.log('sequence:', sequence, sequence.join(''));\n        console.log('structure:', structure, structure.join(''));\n        return [sequence.join(''), structure.join('')];\n    };\n    \n    /* APIs */\n    self.startAnimation = function() {\n      self.options.animation = true;\n      vis.selectAll('g.gnode')\n        .call(drag);\n      self.force.start();\n    };\n\n    self.stopAnimation = function() {\n      self.options.animation = false;\n      vis.selectAll('g.gnode')\n           .on('mousedown.drag', null);\n      self.force.stop();\n    };\n    \n    self.resumeForce = function() {\n        if (self.options.animation)\n            self.force.resume();\n    };\n\n    self.setFriction = function(value) {\n      self.force.friction(value);\n      self.resumeForce();\n    };\n\n    self.setCharge = function(value) {\n      self.force.charge(value);\n      self.resumeForce();\n    };\n\n    self.setGravity = function(value) {\n      self.force.gravity(value);\n      self.resumeForce();\n    };\n\n    self.setPseudoknotStrength = function(value) {\n      self.linkStrengths.pseudoknot = value;\n      self.update();\n    };\n\n    self.displayNumbering = function(value) {\n      self.displayParameters.displayNumbering = value;\n      updateStyle();\n    };\n\n    self.displayNodeOutline = function(value) {\n      self.displayParameters.displayNodeOutline = value;\n      updateStyle();\n    };\n\n    self.displayNodeLabel = function(value) {\n      self.displayParameters.displayNodeLabel = value;\n      updateStyle();\n    };\n\n    self.displayLinks = function(value) {\n      self.displayParameters.displayLinks = value;\n      updateStyle();\n    };\n\n    self.displayPseudoknotLinks = function(value) {\n      self.displayParameters.displayPseudoknotLinks = value;\n      updateStyle();\n    };\n\n    self.displayProteinLinks = function(value) {\n      self.displayParameters.displayProteinLinks = value;\n      updateStyle();\n    };\n\n    self.displayDirectionArrows = function(value) {\n      self.displayParameters.displayDirectionArrows = value;\n      updateStyle();\n    };\n}\n","import {RNAGraph} from './rnagraph.js';\n\nimport {simpleXyCoordinates} from './simplernaplot.js';\nimport {NAView} from './naview/naview.js'\n\nimport fstyle from './fornac.css';\n\nexport function rnaPlot(passedOptions = {}) {\n    var options = {\n        'width': 300,\n        'height': 300,\n        'nucleotideRadius': 5,\n        'rnaEdgePadding': 1,     // how far the leftmost, rightmost, topmost and bottomost\n                                // nucleotides are from the edge of the plot\n        'labelInterval': 10,\n        'showNucleotideLabels': true,\n        'startNucleotideNumber': 1,\n        'bundleExternalLinks': false,\n\n        'rnaLayout': 'simple', // simple or naview\n        'namePosition': '0 0' // for x and y either 0, 0.5 or 1\n    };\n    var options = Object.assign(options, passedOptions);\n\n    var xScale, yScale;\n\n    function createTransformToFillViewport(xValues, yValues) {\n        // create transform that will scale the x and y values so that\n        // they fill the available viewport\n        let xExtent = d3.extent(xValues);\n        let yExtent = d3.extent(yValues);\n\n        // add the radius of the nucleotides\n        xExtent[0] -= options.nucleotideRadius + options.rnaEdgePadding;\n        yExtent[0] -= options.nucleotideRadius + options.rnaEdgePadding;\n\n        xExtent[1] += options.nucleotideRadius + options.rnaEdgePadding;\n        yExtent[1] += options.nucleotideRadius + options.rnaEdgePadding;\n\n        // find out how wide and height the molecule\n        var xRange = xExtent[1] - xExtent[0];\n        var yRange = yExtent[1] - yExtent[0];\n\n        // how much wider / taller is it than the available viewport\n        var xExtra = xRange - options.width;\n        var yExtra = yRange - options.height;\n\n        // once we have a scale for one dimension, we can create the scale for the other\n        // keeping the same expansion / shrinking ratio\n        function createOtherScale(firstScale, newDomain, newRange) {\n            var scaleFactor = (firstScale.range()[1] - firstScale.range()[0]) /\n                              (firstScale.domain()[1] - firstScale.domain()[0]);\n            var newWidth = (newDomain[1] - newDomain[0]) * scaleFactor\n            var newMargin = ((newRange[1] - newRange[0]) - newWidth) / 2;\n\n            return {'scaleFactor': scaleFactor,\n                    'scale': d3.scale.linear()\n                                     .domain(newDomain)\n                                     .range([newRange[0] + newMargin, newRange[1] - newMargin])};\n        }\n\n        var ret;\n\n        if (xExtra > yExtra) {\n            // we have to shrink more in the x-dimension than the y\n            xScale = d3.scale.linear()\n            .domain(xExtent)\n            .range([0, options.width])\n\n            ret = createOtherScale(xScale, yExtent, [0, options.height]);\n            yScale = ret.scale;\n        } else {\n            // we have to shrink more in the x-dimension than the y\n            yScale = d3.scale.linear()\n            .domain(yExtent)\n            .range([0, options.height])\n\n            ret = createOtherScale(yScale, xExtent, [0, options.width]);\n            xScale = ret.scale;\n        }\n\n        var xOffset = xScale.range()[0] - xScale.domain()[0];\n        var yOffset = yScale.range()[0] - yScale.domain()[0];\n\n        return 'translate(' + -(xScale.domain()[0] * ret.scaleFactor - xScale.range()[0]) +\n                  ',' + -(yScale.domain()[0] * ret.scaleFactor - yScale.range()[0]) + ')' +\n            'scale(' + ret.scaleFactor + ')';\n    }\n\n    function createNucleotides(selection, nucleotideNodes) {\n        // create groupings for each nucleotide and label\n        var gs = selection\n        .selectAll('.gnode')\n        .data(nucleotideNodes)\n        .enter()\n        .append('svg:g')\n        .classed('gnode', true)\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n\n        var circles = gs.append('svg:circle')\n        .classed(fstyle.node, true)\n        .attr('node_type', 'nucleotide')\n        .attr('base_type', (d) => { if (d.name) { return d.name.toLowerCase(); }})\n        .attr('r', options.nucleotideRadius)\n\n\n        if (options.showNucleotideLabels) {\n            var nucleotideLabels = gs.append('svg:text')\n            .text(function(d) { return d.name; })\n            .classed(fstyle.nodeLabel, true)\n            .append('svg:title')\n            .text(function(d) { return d.struct_name + ':' + d.num; });\n        }\n    }\n\n    function createLabels(selection, labelNodes) {\n        // create groupings for each nucleotide and label\n\n        var gs = selection\n        .selectAll()\n        .data(labelNodes)\n        .enter()\n        .append('svg:g')\n        .classed('gnode', true)\n        .attr('transform', function(d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n\n        var circles = gs.append('svg:circle')\n        .classed(fstyle.node, true)\n        .attr('node_type', 'label')\n        .attr('r', options.nucleotideRadius)\n\n        var numberLabels = gs.append('svg:text')\n        .classed(fstyle.nodeLabel, true)\n        .text(function(d) { return d.name; })\n    }\n\n    function createName(selection, name) {\n        let nameLabel = selection.append('svg:text')\n        //.attr('dy', -10)\n        .classed(fstyle.plotLabel, true)\n        .text(name);\n\n        let xyPos = options.namePosition.split(\" \", 2) // 0 0.5 1\n        let xy = []\n        let textBBox = nameLabel.node().getBBox()\n        let textSize = [textBBox.width, textBBox.height]\n        let plotSize = [options.width, options.height]\n\n        for (let p in [0, 1]) {\n            switch (xyPos[p]) {\n                case '0':\n                    xy[p] = textSize[p] / 2\n                    break;\n                case '1':\n                    xy[p] = plotSize[p] - textSize[p] / 2\n                    break;\n                case '0.5':\n                    xy[p] = plotSize[p] / 2\n                    break;\n            }\n        }\n        nameLabel.attr('x', xy[0]).attr('y', xy[1])\n    }\n\n    function makeExternalLinksBundle(selection, links) {\n        var nodesDict = {};\n        var linksList = [];\n        links = links.filter(function(d) { return d.linkType == 'correct' || d.linkType == 'incorrect' || d.linkType == 'extra'; });\n\n        selection.selectAll('[link-type=extra]')\n        .remove();\n\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].source === null || links[i].target === null)\n                continue;\n\n            nodesDict[links[i].source.uid] = links[i].source;\n            nodesDict[links[i].target.uid] = links[i].target;\n\n            linksList.push({'source': links[i].source.uid, 'target': links[i].target.uid, 'linkType': links[i].linkType, 'extraLinkType': links[i].extraLinkType}) ;\n        }\n\n        var fbundling = d3.ForceEdgeBundling().nodes(nodesDict).edges(linksList)\n        .compatibility_threshold(0.8).step_size(0.2);\n        var results   = fbundling();\n\n        var d3line = d3.svg.line()\n            .x(function(d){return d.x;})\n            .y(function(d){return d.y;})\n            .interpolate('linear');\n\n        for (var i = 0; i < results.length; i++) {\n            var edge_subpoint_data = results[i];\n            // for each of the arrays in the results\n            // draw a line between the subdivions points for that edge\n\n            selection.append('path').attr('d', d3line(edge_subpoint_data))\n            .style('fill', 'none')\n            .attr('link-type', function(d) { return linksList[i].linkType; })\n            .attr('extra-link-type', function(d) { return linksList[i].extraLinkType; })\n            .style('stroke-opacity',0.4); //use opacity as blending\n        }\n\n    }\n\n    function createLinks(selection, links) {\n        links = links.filter(function(d) { return d.source !== null && d.target !== null; });\n        var gs = selection.selectAll('.link')\n        .data(links)\n        .enter()\n        .append('svg:line')\n        .attr('x1', function(d) { return d.source.x; })\n        .attr('x2', function(d) { return d.target.x; })\n        .attr('y1', function(d) { return d.source.y; })\n        .attr('y2', function(d) { return d.target.y; })\n        .attr('link-type', function(d) { return d.linkType; })\n        .attr('extra-link-type', function(d) { return d.extraLinkType; })\n        .classed('link', true)\n        .classed(fstyle.link, true)\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            let plot = d3.select(this).append('g')\n            .classed(fstyle.plot, true)\n\n            // data should be a dictionary containing at least a structure\n            // and possibly a sequence\n            let rg = new RNAGraph(data.sequence, data.structure, data.name, options.startNucleotideNumber)\n                    .recalculateElements()\n                    .elementsToJson()\n                    .addName(data.name);\n\n            data.rnaGraph = rg;\n            // calculate the position of each nucleotide\n            // the positions of the labels will be calculated in\n            // the addLabels function\n            let positions = [];\n\n            if (options.rnaLayout === 'naview') {\n                var naview = new NAView();\n                var naViewPositions = naview.naview_xy_coordinates(rg.pairtable);\n\n                for (var i = 0; i < naViewPositions.nbase; i++) {\n                    positions.push([naViewPositions.x[i], naViewPositions.y[i]]);\n                }\n            } else {\n                positions = simpleXyCoordinates(rg.pairtable);\n            }\n\n            rg.addPositions('nucleotide', positions)\n            //.reinforceStems()\n            //.reinforceLoops()\n            //.addExtraLinks(data.extraLinks)\n            .addLabels(options.startNucleotideNumber, options.labelInterval);\n\n            // create a transform that will fit the molecule to the\n            // size of the viewport (canvas, svg, whatever)\n            let fillViewportTransform = createTransformToFillViewport(\n                rg.nodes.map(function(d) { return d.x; }),\n                rg.nodes.map(function(d) { return d.y; })\n            );\n            plot.attr('transform', fillViewportTransform);\n\n            let nucleotideNodes = rg.nodes.filter(function(d) {\n                return d.nodeType == 'nucleotide';\n            });\n\n            let labelNodes = rg.nodes.filter(function(d) {\n                return d.nodeType == 'label';\n            });\n\n            let links = rg.links;\n\n            createLinks(plot, links);\n            createNucleotides(plot, nucleotideNodes);\n            createLabels(plot, labelNodes);\n            createName(d3.select(this), data.name);\n\n            if (options.bundleExternalLinks) {\n                makeExternalLinksBundle(plot, links);\n            }\n\n        });\n    }\n\n    chart.width = function(_) {\n        if (!arguments.length) return options.width;\n        options.width = _;\n        return chart;\n    };\n\n    chart.height = function(_) {\n        if (!arguments.length) return options.height;\n        options.height = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.rnaEdgePadding = function(_) {\n        if (!arguments.length) return options.rnaEdgePadding;\n        options.rnaEdgePadding = _;\n        return chart;\n    };\n\n    chart.nucleotideRadius = function(_) {\n        if (!arguments.length) return options.nucleotideRadius;\n        options.nucleotideRadius = _;\n        return chart;\n    };\n\n    chart.labelInterval = function(_) {\n        if (!arguments.length) return options.labelInterval;\n        options.labelInterval = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.startNucleotideNumber = function(_) {\n        if (!arguments.length) return options.startNucleotideNumber;\n        options.startNucleotideNumber = _;\n        return chart;\n    };\n\n    chart.bundleExternalLinks = function(_) {\n        if (!arguments.length) return options.bundleExternalLinks;\n        options.bundleExternalLinks = _;\n        return chart;\n    };\n\n    chart.rnaLayout = function(_) {\n        if (!arguments.length) return options.rnaLayout;\n        options.rnaLayout = _;\n        return chart;\n    };\n\n    chart.namePosition = function(_) {\n        if (!arguments.length) return options.namePosition;\n        options.namePosition = _;\n        return chart;\n    };\n\n    return chart;\n}\n","import {rnaPlot} from './rnaplot.js';\n\nexport function rnaTreemap(passedOptions = {}) {\n    var options = {\n        'width': 300,\n        'height': 300,\n        'nucleotideRadius': 5,\n        'rnaEdgePadding': 1,     // how far the leftmost, rightmost, topmost and bottomost\n                                // nucleotides are from the edge of the plot\n        'labelInterval': 10,\n        'showNucleotideLabels': true,\n        'startNucleotideNumber': 1,\n        'bundleExternalLinks': false,\n\n        'rnaLayout': 'simple', // simple or naview\n        'namePosition': '0 0', // for x and y either 0, 0.5 or 1\n    };\n\n    var options = Object.assign(options, passedOptions);\n\n    function rnaTreemapNode(selection) {\n        // create a background rectangle for each RNA structure\n        selection.each(function(d) {\n            d3.select(this)\n            .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')' })\n            .append('rect')\n            .attr('fill', 'transparent')\n            .attr('width', function(d) { return Math.max(0, d.dx); })\n            .attr('height', function(d) { return Math.max(0, d.dy); })\n\n            // draw the actual RNA structure\n            var chart = rnaPlot(options)\n            .width( Math.max(0, d.dx))\n            .height( Math.max(0, d.dy))\n\n            if ('structure' in d) d3.select(this).call(chart)\n        });\n    }\n\n    var chart = function(selection) {\n        selection.each(function(data) {\n            console.log('data:', data)\n            // initialize the treemap structure\n            // sample input\n            // { 'name': 'blah',\n            // 'children: [{'structure': '..((..))',\n            //               'sequence': 'ACCGGCC',\n            //               'size': 50}]\n            // }\n            var treemap = d3.layout.treemap()\n            .size([options.width, options.height])\n            .sticky(false)\n            .value(function(d) { return d.size; });\n\n            // create a new <g> for each node in the treemap\n            // this may be a little redundant, since we expect the calling\n            // selection to contain their own g elements\n            var gEnter = d3.select(this)\n                .append('g')\n                .classed('rnatreemap', true)\n            var treemapGnodes = gEnter.datum(data).selectAll('.treemapnode')\n                .data(treemap.nodes)\n                .enter()\n                .append('g')\n                .classed('treemapnode', true)\n                .call(rnaTreemapNode);\n        });\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return options.width;\n        options.width = _;\n        return chart;\n    };\n\n    chart.height = function(_) {\n        if (!arguments.length) return options.height;\n        options.height = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.rnaEdgePadding = function(_) {\n        if (!arguments.length) return options.rnaEdgePadding;\n        options.rnaEdgePadding = _;\n        return chart;\n    };\n\n    chart.nucleotideRadius = function(_) {\n        if (!arguments.length) return options.nucleotideRadius;\n        options.nucleotideRadius = _;\n        return chart;\n    };\n\n    chart.labelInterval = function(_) {\n        if (!arguments.length) return options.labelInterval;\n        options.labelInterval = _;\n        return chart;\n    };\n\n    chart.showNucleotideLabels = function(_) {\n        if (!arguments.length) return options.showNucleotideLabels;\n        options.showNucleotideLabels = _;\n        return chart;\n    };\n\n    chart.startNucleotideNumber = function(_) {\n        if (!arguments.length) return options.startNucleotideNumber;\n        options.startNucleotideNumber = _;\n        return chart;\n    };\n\n    chart.bundleExternalLinks = function(_) {\n        if (!arguments.length) return options.bundleExternalLinks;\n        options.bundleExternalLinks = _;\n        return chart;\n    };\n\n    chart.rnaLayout = function(_) {\n        if (!arguments.length) return options.rnaLayout;\n        options.rnaLayout = _;\n        return chart;\n    };\n\n    chart.namePosition = function(_) {\n        if (!arguments.length) return options.namePosition;\n        options.namePosition = _;\n        return chart;\n    };\n\n    chart.zoom = function(_) {\n        if (!arguments.length) return options.zoom;\n        options.zoom = _;\n        return chart;\n    };\n\n    return chart;\n}\n","export {FornaContainer} from './fornac.js';\nexport {rnaPlot} from './rnaplot.js';\nexport {rnaTreemap} from './rnatreemap.js';\n\nexport {RNAUtilities, ColorScheme} from './rnautils.js';\n//export {ProteinGraph, RNAGraph, moleculesToJson} from './rnagraph.js';\n//export {simpleXyCoordinates} from './simplernaplot.js';"],"sourceRoot":""}